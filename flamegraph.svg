<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="726" onload="init(evt)" viewBox="0 0 1200 726" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="726" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="709.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="709.00"> </text><svg id="frames" x="10" width="1180" total_samples="902597444"><g><title>[iris_dri.so] (1,210,682 samples, 0.13%)</title><rect x="0.0000%" y="645" width="0.1341%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1210682"/><text x="0.2500%" y="655.50"></text></g><g><title>[iris_dri.so] (14,471,269 samples, 1.60%)</title><rect x="0.1341%" y="565" width="1.6033%" height="15" fill="rgb(217,0,24)" fg:x="1210682" fg:w="14471269"/><text x="0.3841%" y="575.50"></text></g><g><title>[iris_dri.so] (14,471,269 samples, 1.60%)</title><rect x="0.1341%" y="549" width="1.6033%" height="15" fill="rgb(221,193,54)" fg:x="1210682" fg:w="14471269"/><text x="0.3841%" y="559.50"></text></g><g><title>[iris_dri.so] (13,356,632 samples, 1.48%)</title><rect x="0.2576%" y="533" width="1.4798%" height="15" fill="rgb(248,212,6)" fg:x="2325319" fg:w="13356632"/><text x="0.5076%" y="543.50"></text></g><g><title>[iris_dri.so] (11,098,323 samples, 1.23%)</title><rect x="0.5078%" y="517" width="1.2296%" height="15" fill="rgb(208,68,35)" fg:x="4583628" fg:w="11098323"/><text x="0.7578%" y="527.50"></text></g><g><title>[iris_dri.so] (9,813,273 samples, 1.09%)</title><rect x="0.6502%" y="501" width="1.0872%" height="15" fill="rgb(232,128,0)" fg:x="5868678" fg:w="9813273"/><text x="0.9002%" y="511.50"></text></g><g><title>[iris_dri.so] (8,485,809 samples, 0.94%)</title><rect x="0.7973%" y="485" width="0.9402%" height="15" fill="rgb(207,160,47)" fg:x="7196142" fg:w="8485809"/><text x="1.0473%" y="495.50"></text></g><g><title>[iris_dri.so] (6,019,929 samples, 0.67%)</title><rect x="1.0705%" y="469" width="0.6670%" height="15" fill="rgb(228,23,34)" fg:x="9662022" fg:w="6019929"/><text x="1.3205%" y="479.50"></text></g><g><title>[iris_dri.so] (4,815,149 samples, 0.53%)</title><rect x="1.2039%" y="453" width="0.5335%" height="15" fill="rgb(218,30,26)" fg:x="10866802" fg:w="4815149"/><text x="1.4539%" y="463.50"></text></g><g><title>[iris_dri.so] (4,815,149 samples, 0.53%)</title><rect x="1.2039%" y="437" width="0.5335%" height="15" fill="rgb(220,122,19)" fg:x="10866802" fg:w="4815149"/><text x="1.4539%" y="447.50"></text></g><g><title>[iris_dri.so] (4,815,149 samples, 0.53%)</title><rect x="1.2039%" y="421" width="0.5335%" height="15" fill="rgb(250,228,42)" fg:x="10866802" fg:w="4815149"/><text x="1.4539%" y="431.50"></text></g><g><title>[iris_dri.so] (3,700,512 samples, 0.41%)</title><rect x="1.3274%" y="405" width="0.4100%" height="15" fill="rgb(240,193,28)" fg:x="11981439" fg:w="3700512"/><text x="1.5774%" y="415.50"></text></g><g><title>[iris_dri.so] (3,700,512 samples, 0.41%)</title><rect x="1.3274%" y="389" width="0.4100%" height="15" fill="rgb(216,20,37)" fg:x="11981439" fg:w="3700512"/><text x="1.5774%" y="399.50"></text></g><g><title>[iris_dri.so] (14,475,698 samples, 1.60%)</title><rect x="0.1341%" y="613" width="1.6038%" height="15" fill="rgb(206,188,39)" fg:x="1210682" fg:w="14475698"/><text x="0.3841%" y="623.50"></text></g><g><title>[iris_dri.so] (14,475,698 samples, 1.60%)</title><rect x="0.1341%" y="597" width="1.6038%" height="15" fill="rgb(217,207,13)" fg:x="1210682" fg:w="14475698"/><text x="0.3841%" y="607.50"></text></g><g><title>[iris_dri.so] (14,475,698 samples, 1.60%)</title><rect x="0.1341%" y="581" width="1.6038%" height="15" fill="rgb(231,73,38)" fg:x="1210682" fg:w="14475698"/><text x="0.3841%" y="591.50"></text></g><g><title>eportal-:gdrv0 (15,789,060 samples, 1.75%)</title><rect x="0.0000%" y="661" width="1.7493%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="15789060"/><text x="0.2500%" y="671.50"></text></g><g><title>[libc.so.6] (14,578,378 samples, 1.62%)</title><rect x="0.1341%" y="645" width="1.6152%" height="15" fill="rgb(210,31,41)" fg:x="1210682" fg:w="14578378"/><text x="0.3841%" y="655.50"></text></g><g><title>[libc.so.6] (14,578,378 samples, 1.62%)</title><rect x="0.1341%" y="629" width="1.6152%" height="15" fill="rgb(221,200,47)" fg:x="1210682" fg:w="14578378"/><text x="0.3841%" y="639.50"></text></g><g><title>__call_tls_dtors (102,680 samples, 0.01%)</title><rect x="1.7379%" y="613" width="0.0114%" height="15" fill="rgb(226,26,5)" fg:x="15686380" fg:w="102680"/><text x="1.9879%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,024,447 samples, 0.22%)</title><rect x="1.7493%" y="629" width="0.2243%" height="15" fill="rgb(249,33,26)" fg:x="15789060" fg:w="2024447"/><text x="1.9993%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2,024,447 samples, 0.22%)</title><rect x="1.7493%" y="613" width="0.2243%" height="15" fill="rgb(235,183,28)" fg:x="15789060" fg:w="2024447"/><text x="1.9993%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,024,447 samples, 0.22%)</title><rect x="1.7493%" y="597" width="0.2243%" height="15" fill="rgb(221,5,38)" fg:x="15789060" fg:w="2024447"/><text x="1.9993%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,024,447 samples, 0.22%)</title><rect x="1.7493%" y="581" width="0.2243%" height="15" fill="rgb(247,18,42)" fg:x="15789060" fg:w="2024447"/><text x="1.9993%" y="591.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,024,447 samples, 0.22%)</title><rect x="1.7493%" y="565" width="0.2243%" height="15" fill="rgb(241,131,45)" fg:x="15789060" fg:w="2024447"/><text x="1.9993%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,024,447 samples, 0.22%)</title><rect x="1.7493%" y="549" width="0.2243%" height="15" fill="rgb(249,31,29)" fg:x="15789060" fg:w="2024447"/><text x="1.9993%" y="559.50"></text></g><g><title>[[heap]] (5,115,459 samples, 0.57%)</title><rect x="1.7493%" y="645" width="0.5667%" height="15" fill="rgb(225,111,53)" fg:x="15789060" fg:w="5115459"/><text x="1.9993%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,091,012 samples, 0.34%)</title><rect x="1.9736%" y="629" width="0.3425%" height="15" fill="rgb(238,160,17)" fg:x="17813507" fg:w="3091012"/><text x="2.2236%" y="639.50"></text></g><g><title>[ld-linux-x86-64.so.2] (273,881 samples, 0.03%)</title><rect x="2.3160%" y="629" width="0.0303%" height="15" fill="rgb(214,148,48)" fg:x="20904519" fg:w="273881"/><text x="2.5660%" y="639.50"></text></g><g><title>[[stack]] (286,040 samples, 0.03%)</title><rect x="2.3160%" y="645" width="0.0317%" height="15" fill="rgb(232,36,49)" fg:x="20904519" fg:w="286040"/><text x="2.5660%" y="655.50"></text></g><g><title>[libc.so.6] (588,850 samples, 0.07%)</title><rect x="2.3567%" y="645" width="0.0652%" height="15" fill="rgb(209,103,24)" fg:x="21271148" fg:w="588850"/><text x="2.6067%" y="655.50"></text></g><g><title>[libc.so.6] (588,834 samples, 0.07%)</title><rect x="2.3567%" y="629" width="0.0652%" height="15" fill="rgb(229,88,8)" fg:x="21271164" fg:w="588834"/><text x="2.6067%" y="639.50"></text></g><g><title>[iris_dri.so] (576,784 samples, 0.06%)</title><rect x="2.3580%" y="613" width="0.0639%" height="15" fill="rgb(213,181,19)" fg:x="21283214" fg:w="576784"/><text x="2.6080%" y="623.50"></text></g><g><title>cfree (576,784 samples, 0.06%)</title><rect x="2.3580%" y="597" width="0.0639%" height="15" fill="rgb(254,191,54)" fg:x="21283214" fg:w="576784"/><text x="2.6080%" y="607.50"></text></g><g><title>[libc.so.6] (576,784 samples, 0.06%)</title><rect x="2.3580%" y="581" width="0.0639%" height="15" fill="rgb(241,83,37)" fg:x="21283214" fg:w="576784"/><text x="2.6080%" y="591.50"></text></g><g><title>[libc.so.6] (576,784 samples, 0.06%)</title><rect x="2.3580%" y="565" width="0.0639%" height="15" fill="rgb(233,36,39)" fg:x="21283214" fg:w="576784"/><text x="2.6080%" y="575.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,684,020 samples, 0.30%)</title><rect x="2.8289%" y="629" width="0.2974%" height="15" fill="rgb(226,3,54)" fg:x="25533656" fg:w="2684020"/><text x="3.0789%" y="639.50"></text></g><g><title>[libXcursor.so.1.0.2] (481,530 samples, 0.05%)</title><rect x="3.1263%" y="629" width="0.0533%" height="15" fill="rgb(245,192,40)" fg:x="28217676" fg:w="481530"/><text x="3.3763%" y="639.50"></text></g><g><title>_IO_getline_info (481,530 samples, 0.05%)</title><rect x="3.1263%" y="613" width="0.0533%" height="15" fill="rgb(238,167,29)" fg:x="28217676" fg:w="481530"/><text x="3.3763%" y="623.50"></text></g><g><title>[libc.so.6] (7,697,233 samples, 0.85%)</title><rect x="3.1796%" y="629" width="0.8528%" height="15" fill="rgb(232,182,51)" fg:x="28699206" fg:w="7697233"/><text x="3.4296%" y="639.50"></text></g><g><title>[unknown] (17,341,071 samples, 1.92%)</title><rect x="2.4219%" y="645" width="1.9212%" height="15" fill="rgb(231,60,39)" fg:x="21859998" fg:w="17341071"/><text x="2.6719%" y="655.50">[..</text></g><g><title>eportal_rust::amain::_{{closure}} (2,804,630 samples, 0.31%)</title><rect x="4.0324%" y="629" width="0.3107%" height="15" fill="rgb(208,69,12)" fg:x="36396439" fg:w="2804630"/><text x="4.2824%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;&amp;std::time::Instant,&amp;eportal_rust::plant::Plant&gt;&gt; (2,804,630 samples, 0.31%)</title><rect x="4.0324%" y="613" width="0.3107%" height="15" fill="rgb(235,93,37)" fg:x="36396439" fg:w="2804630"/><text x="4.2824%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;&amp;std::time::Instant,&amp;eportal_rust::plant::Plant,std::hash::random::RandomState&gt;&gt; (2,804,630 samples, 0.31%)</title><rect x="4.0324%" y="597" width="0.3107%" height="15" fill="rgb(213,116,39)" fg:x="36396439" fg:w="2804630"/><text x="4.2824%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(&amp;std::time::Instant,&amp;eportal_rust::plant::Plant)&gt;&gt; (2,804,630 samples, 0.31%)</title><rect x="4.0324%" y="581" width="0.3107%" height="15" fill="rgb(222,207,29)" fg:x="36396439" fg:w="2804630"/><text x="4.2824%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,804,630 samples, 0.31%)</title><rect x="4.0324%" y="565" width="0.3107%" height="15" fill="rgb(206,96,30)" fg:x="36396439" fg:w="2804630"/><text x="4.2824%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,804,630 samples, 0.31%)</title><rect x="4.0324%" y="549" width="0.3107%" height="15" fill="rgb(218,138,4)" fg:x="36396439" fg:w="2804630"/><text x="4.2824%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2,804,630 samples, 0.31%)</title><rect x="4.0324%" y="533" width="0.3107%" height="15" fill="rgb(250,191,14)" fg:x="36396439" fg:w="2804630"/><text x="4.2824%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,804,630 samples, 0.31%)</title><rect x="4.0324%" y="517" width="0.3107%" height="15" fill="rgb(239,60,40)" fg:x="36396439" fg:w="2804630"/><text x="4.2824%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (2,804,630 samples, 0.31%)</title><rect x="4.0324%" y="501" width="0.3107%" height="15" fill="rgb(206,27,48)" fg:x="36396439" fg:w="2804630"/><text x="4.2824%" y="511.50"></text></g><g><title>__rdl_dealloc (2,804,630 samples, 0.31%)</title><rect x="4.0324%" y="485" width="0.3107%" height="15" fill="rgb(225,35,8)" fg:x="36396439" fg:w="2804630"/><text x="4.2824%" y="495.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,804,630 samples, 0.31%)</title><rect x="4.0324%" y="469" width="0.3107%" height="15" fill="rgb(250,213,24)" fg:x="36396439" fg:w="2804630"/><text x="4.2824%" y="479.50"></text></g><g><title>_XlcCreateDefaultCharSet (1,991,123 samples, 0.22%)</title><rect x="4.3431%" y="645" width="0.2206%" height="15" fill="rgb(247,123,22)" fg:x="39201069" fg:w="1991123"/><text x="4.5931%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,610,368 samples, 0.18%)</title><rect x="4.5637%" y="645" width="0.1784%" height="15" fill="rgb(231,138,38)" fg:x="41192192" fg:w="1610368"/><text x="4.8137%" y="655.50"></text></g><g><title>&lt;&amp;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (36,478,894 samples, 4.04%)</title><rect x="12.4134%" y="485" width="4.0415%" height="15" fill="rgb(231,145,46)" fg:x="112042618" fg:w="36478894"/><text x="12.6634%" y="495.50">&lt;&amp;st..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (36,478,894 samples, 4.04%)</title><rect x="12.4134%" y="469" width="4.0415%" height="15" fill="rgb(251,118,11)" fg:x="112042618" fg:w="36478894"/><text x="12.6634%" y="479.50">std:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (36,478,894 samples, 4.04%)</title><rect x="12.4134%" y="453" width="4.0415%" height="15" fill="rgb(217,147,25)" fg:x="112042618" fg:w="36478894"/><text x="12.6634%" y="463.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (36,478,894 samples, 4.04%)</title><rect x="12.4134%" y="437" width="4.0415%" height="15" fill="rgb(247,81,37)" fg:x="112042618" fg:w="36478894"/><text x="12.6634%" y="447.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner::iter (36,478,894 samples, 4.04%)</title><rect x="12.4134%" y="421" width="4.0415%" height="15" fill="rgb(209,12,38)" fg:x="112042618" fg:w="36478894"/><text x="12.6634%" y="431.50">hash..</text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (36,478,894 samples, 4.04%)</title><rect x="12.4134%" y="405" width="4.0415%" height="15" fill="rgb(227,1,9)" fg:x="112042618" fg:w="36478894"/><text x="12.6634%" y="415.50">hash..</text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (36,478,894 samples, 4.04%)</title><rect x="12.4134%" y="389" width="4.0415%" height="15" fill="rgb(248,47,43)" fg:x="112042618" fg:w="36478894"/><text x="12.6634%" y="399.50">hash..</text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (36,478,894 samples, 4.04%)</title><rect x="12.4134%" y="373" width="4.0415%" height="15" fill="rgb(221,10,30)" fg:x="112042618" fg:w="36478894"/><text x="12.6634%" y="383.50">core..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,665,214 samples, 0.30%)</title><rect x="16.7806%" y="325" width="0.2953%" height="15" fill="rgb(210,229,1)" fg:x="151461433" fg:w="2665214"/><text x="17.0306%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (2,665,214 samples, 0.30%)</title><rect x="16.7806%" y="309" width="0.2953%" height="15" fill="rgb(222,148,37)" fg:x="151461433" fg:w="2665214"/><text x="17.0306%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,665,214 samples, 0.30%)</title><rect x="16.7806%" y="293" width="0.2953%" height="15" fill="rgb(234,67,33)" fg:x="151461433" fg:w="2665214"/><text x="17.0306%" y="303.50"></text></g><g><title>[libc.so.6] (2,665,214 samples, 0.30%)</title><rect x="16.7806%" y="277" width="0.2953%" height="15" fill="rgb(247,98,35)" fg:x="151461433" fg:w="2665214"/><text x="17.0306%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (8,344,096 samples, 0.92%)</title><rect x="16.4549%" y="373" width="0.9245%" height="15" fill="rgb(247,138,52)" fg:x="148521512" fg:w="8344096"/><text x="16.7049%" y="383.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (8,344,096 samples, 0.92%)</title><rect x="16.4549%" y="357" width="0.9245%" height="15" fill="rgb(213,79,30)" fg:x="148521512" fg:w="8344096"/><text x="16.7049%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,344,096 samples, 0.92%)</title><rect x="16.4549%" y="341" width="0.9245%" height="15" fill="rgb(246,177,23)" fg:x="148521512" fg:w="8344096"/><text x="16.7049%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,738,961 samples, 0.30%)</title><rect x="17.0759%" y="325" width="0.3035%" height="15" fill="rgb(230,62,27)" fg:x="154126647" fg:w="2738961"/><text x="17.3259%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,738,961 samples, 0.30%)</title><rect x="17.0759%" y="309" width="0.3035%" height="15" fill="rgb(216,154,8)" fg:x="154126647" fg:w="2738961"/><text x="17.3259%" y="319.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,738,961 samples, 0.30%)</title><rect x="17.0759%" y="293" width="0.3035%" height="15" fill="rgb(244,35,45)" fg:x="154126647" fg:w="2738961"/><text x="17.3259%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,738,961 samples, 0.30%)</title><rect x="17.0759%" y="277" width="0.3035%" height="15" fill="rgb(251,115,12)" fg:x="154126647" fg:w="2738961"/><text x="17.3259%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,738,961 samples, 0.30%)</title><rect x="17.0759%" y="261" width="0.3035%" height="15" fill="rgb(240,54,50)" fg:x="154126647" fg:w="2738961"/><text x="17.3259%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2,738,961 samples, 0.30%)</title><rect x="17.0759%" y="245" width="0.3035%" height="15" fill="rgb(233,84,52)" fg:x="154126647" fg:w="2738961"/><text x="17.3259%" y="255.50"></text></g><g><title>__rdl_alloc (2,738,961 samples, 0.30%)</title><rect x="17.0759%" y="229" width="0.3035%" height="15" fill="rgb(207,117,47)" fg:x="154126647" fg:w="2738961"/><text x="17.3259%" y="239.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,738,961 samples, 0.30%)</title><rect x="17.0759%" y="213" width="0.3035%" height="15" fill="rgb(249,43,39)" fg:x="154126647" fg:w="2738961"/><text x="17.3259%" y="223.50"></text></g><g><title>malloc (2,738,961 samples, 0.30%)</title><rect x="17.0759%" y="197" width="0.3035%" height="15" fill="rgb(209,38,44)" fg:x="154126647" fg:w="2738961"/><text x="17.3259%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (10,665,700 samples, 1.18%)</title><rect x="16.4549%" y="485" width="1.1817%" height="15" fill="rgb(236,212,23)" fg:x="148521512" fg:w="10665700"/><text x="16.7049%" y="495.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (10,665,700 samples, 1.18%)</title><rect x="16.4549%" y="469" width="1.1817%" height="15" fill="rgb(242,79,21)" fg:x="148521512" fg:w="10665700"/><text x="16.7049%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,665,700 samples, 1.18%)</title><rect x="16.4549%" y="453" width="1.1817%" height="15" fill="rgb(211,96,35)" fg:x="148521512" fg:w="10665700"/><text x="16.7049%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (10,665,700 samples, 1.18%)</title><rect x="16.4549%" y="437" width="1.1817%" height="15" fill="rgb(253,215,40)" fg:x="148521512" fg:w="10665700"/><text x="16.7049%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (10,665,700 samples, 1.18%)</title><rect x="16.4549%" y="421" width="1.1817%" height="15" fill="rgb(211,81,21)" fg:x="148521512" fg:w="10665700"/><text x="16.7049%" y="431.50"></text></g><g><title>core::clone::Clone::clone (10,665,700 samples, 1.18%)</title><rect x="16.4549%" y="405" width="1.1817%" height="15" fill="rgb(208,190,38)" fg:x="148521512" fg:w="10665700"/><text x="16.7049%" y="415.50"></text></g><g><title>&lt;eportal_rust::body::Body as core::clone::Clone&gt;::clone (10,665,700 samples, 1.18%)</title><rect x="16.4549%" y="389" width="1.1817%" height="15" fill="rgb(235,213,38)" fg:x="148521512" fg:w="10665700"/><text x="16.7049%" y="399.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,321,604 samples, 0.26%)</title><rect x="17.3794%" y="373" width="0.2572%" height="15" fill="rgb(237,122,38)" fg:x="156865608" fg:w="2321604"/><text x="17.6294%" y="383.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,321,604 samples, 0.26%)</title><rect x="17.3794%" y="357" width="0.2572%" height="15" fill="rgb(244,218,35)" fg:x="156865608" fg:w="2321604"/><text x="17.6294%" y="367.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,321,604 samples, 0.26%)</title><rect x="17.3794%" y="341" width="0.2572%" height="15" fill="rgb(240,68,47)" fg:x="156865608" fg:w="2321604"/><text x="17.6294%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,321,604 samples, 0.26%)</title><rect x="17.3794%" y="325" width="0.2572%" height="15" fill="rgb(210,16,53)" fg:x="156865608" fg:w="2321604"/><text x="17.6294%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,321,604 samples, 0.26%)</title><rect x="17.3794%" y="309" width="0.2572%" height="15" fill="rgb(235,124,12)" fg:x="156865608" fg:w="2321604"/><text x="17.6294%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,321,604 samples, 0.26%)</title><rect x="17.3794%" y="293" width="0.2572%" height="15" fill="rgb(224,169,11)" fg:x="156865608" fg:w="2321604"/><text x="17.6294%" y="303.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,321,604 samples, 0.26%)</title><rect x="17.3794%" y="277" width="0.2572%" height="15" fill="rgb(250,166,2)" fg:x="156865608" fg:w="2321604"/><text x="17.6294%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,321,604 samples, 0.26%)</title><rect x="17.3794%" y="261" width="0.2572%" height="15" fill="rgb(242,216,29)" fg:x="156865608" fg:w="2321604"/><text x="17.6294%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,321,604 samples, 0.26%)</title><rect x="17.3794%" y="245" width="0.2572%" height="15" fill="rgb(230,116,27)" fg:x="156865608" fg:w="2321604"/><text x="17.6294%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2,321,604 samples, 0.26%)</title><rect x="17.3794%" y="229" width="0.2572%" height="15" fill="rgb(228,99,48)" fg:x="156865608" fg:w="2321604"/><text x="17.6294%" y="239.50"></text></g><g><title>__rdl_alloc (2,321,604 samples, 0.26%)</title><rect x="17.3794%" y="213" width="0.2572%" height="15" fill="rgb(253,11,6)" fg:x="156865608" fg:w="2321604"/><text x="17.6294%" y="223.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,321,604 samples, 0.26%)</title><rect x="17.3794%" y="197" width="0.2572%" height="15" fill="rgb(247,143,39)" fg:x="156865608" fg:w="2321604"/><text x="17.6294%" y="207.50"></text></g><g><title>malloc (2,321,604 samples, 0.26%)</title><rect x="17.3794%" y="181" width="0.2572%" height="15" fill="rgb(236,97,10)" fg:x="156865608" fg:w="2321604"/><text x="17.6294%" y="191.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2,967,059 samples, 0.33%)</title><rect x="17.8706%" y="421" width="0.3287%" height="15" fill="rgb(233,208,19)" fg:x="161299948" fg:w="2967059"/><text x="18.1206%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2,967,059 samples, 0.33%)</title><rect x="17.8706%" y="405" width="0.3287%" height="15" fill="rgb(216,164,2)" fg:x="161299948" fg:w="2967059"/><text x="18.1206%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (2,967,059 samples, 0.33%)</title><rect x="17.8706%" y="389" width="0.3287%" height="15" fill="rgb(220,129,5)" fg:x="161299948" fg:w="2967059"/><text x="18.1206%" y="399.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (2,967,059 samples, 0.33%)</title><rect x="17.8706%" y="373" width="0.3287%" height="15" fill="rgb(242,17,10)" fg:x="161299948" fg:w="2967059"/><text x="18.1206%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,148,488 samples, 0.90%)</title><rect x="17.6366%" y="485" width="0.9028%" height="15" fill="rgb(242,107,0)" fg:x="159187212" fg:w="8148488"/><text x="17.8866%" y="495.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,148,488 samples, 0.90%)</title><rect x="17.6366%" y="469" width="0.9028%" height="15" fill="rgb(251,28,31)" fg:x="159187212" fg:w="8148488"/><text x="17.8866%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,035,752 samples, 0.67%)</title><rect x="17.8706%" y="453" width="0.6687%" height="15" fill="rgb(233,223,10)" fg:x="161299948" fg:w="6035752"/><text x="18.1206%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (6,035,752 samples, 0.67%)</title><rect x="17.8706%" y="437" width="0.6687%" height="15" fill="rgb(215,21,27)" fg:x="161299948" fg:w="6035752"/><text x="18.1206%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (3,068,693 samples, 0.34%)</title><rect x="18.1994%" y="421" width="0.3400%" height="15" fill="rgb(232,23,21)" fg:x="164267007" fg:w="3068693"/><text x="18.4494%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3,068,693 samples, 0.34%)</title><rect x="18.1994%" y="405" width="0.3400%" height="15" fill="rgb(244,5,23)" fg:x="164267007" fg:w="3068693"/><text x="18.4494%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3,068,693 samples, 0.34%)</title><rect x="18.1994%" y="389" width="0.3400%" height="15" fill="rgb(226,81,46)" fg:x="164267007" fg:w="3068693"/><text x="18.4494%" y="399.50"></text></g><g><title>cfree (1,204,780 samples, 0.13%)</title><rect x="18.5394%" y="485" width="0.1335%" height="15" fill="rgb(247,70,30)" fg:x="167335700" fg:w="1204780"/><text x="18.7894%" y="495.50"></text></g><g><title>[libc.so.6] (1,204,780 samples, 0.13%)</title><rect x="18.5394%" y="469" width="0.1335%" height="15" fill="rgb(212,68,19)" fg:x="167335700" fg:w="1204780"/><text x="18.7894%" y="479.50"></text></g><g><title>[libc.so.6] (1,204,780 samples, 0.13%)</title><rect x="18.5394%" y="453" width="0.1335%" height="15" fill="rgb(240,187,13)" fg:x="167335700" fg:w="1204780"/><text x="18.7894%" y="463.50"></text></g><g><title>[libc.so.6] (1,204,780 samples, 0.13%)</title><rect x="18.5394%" y="437" width="0.1335%" height="15" fill="rgb(223,113,26)" fg:x="167335700" fg:w="1204780"/><text x="18.7894%" y="447.50"></text></g><g><title>[libc.so.6] (1,204,780 samples, 0.13%)</title><rect x="18.5394%" y="421" width="0.1335%" height="15" fill="rgb(206,192,2)" fg:x="167335700" fg:w="1204780"/><text x="18.7894%" y="431.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::min (2,988,157 samples, 0.33%)</title><rect x="18.6728%" y="485" width="0.3311%" height="15" fill="rgb(241,108,4)" fg:x="168540480" fg:w="2988157"/><text x="18.9228%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3,007,293 samples, 0.33%)</title><rect x="20.5185%" y="277" width="0.3332%" height="15" fill="rgb(247,173,49)" fg:x="185199840" fg:w="3007293"/><text x="20.7685%" y="287.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (3,007,293 samples, 0.33%)</title><rect x="20.5185%" y="261" width="0.3332%" height="15" fill="rgb(224,114,35)" fg:x="185199840" fg:w="3007293"/><text x="20.7685%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14,519,707 samples, 1.61%)</title><rect x="19.5985%" y="341" width="1.6087%" height="15" fill="rgb(245,159,27)" fg:x="176895340" fg:w="14519707"/><text x="19.8485%" y="351.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14,519,707 samples, 1.61%)</title><rect x="19.5985%" y="325" width="1.6087%" height="15" fill="rgb(245,172,44)" fg:x="176895340" fg:w="14519707"/><text x="19.8485%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,176,949 samples, 1.02%)</title><rect x="20.1904%" y="309" width="1.0167%" height="15" fill="rgb(236,23,11)" fg:x="182238098" fg:w="9176949"/><text x="20.4404%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (6,215,207 samples, 0.69%)</title><rect x="20.5185%" y="293" width="0.6886%" height="15" fill="rgb(205,117,38)" fg:x="185199840" fg:w="6215207"/><text x="20.7685%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (3,207,914 samples, 0.36%)</title><rect x="20.8517%" y="277" width="0.3554%" height="15" fill="rgb(237,72,25)" fg:x="188207133" fg:w="3207914"/><text x="21.1017%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3,207,914 samples, 0.36%)</title><rect x="20.8517%" y="261" width="0.3554%" height="15" fill="rgb(244,70,9)" fg:x="188207133" fg:w="3207914"/><text x="21.1017%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3,207,914 samples, 0.36%)</title><rect x="20.8517%" y="245" width="0.3554%" height="15" fill="rgb(217,125,39)" fg:x="188207133" fg:w="3207914"/><text x="21.1017%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (3,222,619 samples, 0.36%)</title><rect x="21.7482%" y="293" width="0.3570%" height="15" fill="rgb(235,36,10)" fg:x="196298751" fg:w="3222619"/><text x="21.9982%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (3,222,619 samples, 0.36%)</title><rect x="21.7482%" y="277" width="0.3570%" height="15" fill="rgb(251,123,47)" fg:x="196298751" fg:w="3222619"/><text x="21.9982%" y="287.50"></text></g><g><title>glam::f32::math::std_math::sqrt (2,916,526 samples, 0.32%)</title><rect x="22.1052%" y="261" width="0.3231%" height="15" fill="rgb(221,13,13)" fg:x="199521370" fg:w="2916526"/><text x="22.3552%" y="271.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (2,916,526 samples, 0.32%)</title><rect x="22.1052%" y="245" width="0.3231%" height="15" fill="rgb(238,131,9)" fg:x="199521370" fg:w="2916526"/><text x="22.3552%" y="255.50"></text></g><g><title>glam::f32::vec2::Vec2::distance (9,049,220 samples, 1.00%)</title><rect x="22.1052%" y="293" width="1.0026%" height="15" fill="rgb(211,50,8)" fg:x="199521370" fg:w="9049220"/><text x="22.3552%" y="303.50"></text></g><g><title>glam::f32::vec2::Vec2::length (9,049,220 samples, 1.00%)</title><rect x="22.1052%" y="277" width="1.0026%" height="15" fill="rgb(245,182,24)" fg:x="199521370" fg:w="9049220"/><text x="22.3552%" y="287.50"></text></g><g><title>glam::f32::vec2::Vec2::dot (6,132,694 samples, 0.68%)</title><rect x="22.4284%" y="261" width="0.6794%" height="15" fill="rgb(242,14,37)" fg:x="202437896" fg:w="6132694"/><text x="22.6784%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3,103,369 samples, 0.34%)</title><rect x="23.4221%" y="165" width="0.3438%" height="15" fill="rgb(246,228,12)" fg:x="211406945" fg:w="3103369"/><text x="23.6721%" y="175.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (12,436,572 samples, 1.38%)</title><rect x="23.1078%" y="213" width="1.3779%" height="15" fill="rgb(213,55,15)" fg:x="208570590" fg:w="12436572"/><text x="23.3578%" y="223.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12,436,572 samples, 1.38%)</title><rect x="23.1078%" y="197" width="1.3779%" height="15" fill="rgb(209,9,3)" fg:x="208570590" fg:w="12436572"/><text x="23.3578%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12,436,572 samples, 1.38%)</title><rect x="23.1078%" y="181" width="1.3779%" height="15" fill="rgb(230,59,30)" fg:x="208570590" fg:w="12436572"/><text x="23.3578%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6,496,848 samples, 0.72%)</title><rect x="23.7659%" y="165" width="0.7198%" height="15" fill="rgb(209,121,21)" fg:x="214510314" fg:w="6496848"/><text x="24.0159%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6,496,848 samples, 0.72%)</title><rect x="23.7659%" y="149" width="0.7198%" height="15" fill="rgb(220,109,13)" fg:x="214510314" fg:w="6496848"/><text x="24.0159%" y="159.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (3,456,914 samples, 0.38%)</title><rect x="24.4857%" y="213" width="0.3830%" height="15" fill="rgb(232,18,1)" fg:x="221007162" fg:w="3456914"/><text x="24.7357%" y="223.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3,456,914 samples, 0.38%)</title><rect x="24.4857%" y="197" width="0.3830%" height="15" fill="rgb(215,41,42)" fg:x="221007162" fg:w="3456914"/><text x="24.7357%" y="207.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3,456,914 samples, 0.38%)</title><rect x="24.4857%" y="181" width="0.3830%" height="15" fill="rgb(224,123,36)" fg:x="221007162" fg:w="3456914"/><text x="24.7357%" y="191.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3,456,914 samples, 0.38%)</title><rect x="24.4857%" y="165" width="0.3830%" height="15" fill="rgb(240,125,3)" fg:x="221007162" fg:w="3456914"/><text x="24.7357%" y="175.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Nanoseconds as core::hash::Hash&gt;::hash (3,132,772 samples, 0.35%)</title><rect x="24.8687%" y="149" width="0.3471%" height="15" fill="rgb(205,98,50)" fg:x="224464076" fg:w="3132772"/><text x="25.1187%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (3,132,772 samples, 0.35%)</title><rect x="24.8687%" y="133" width="0.3471%" height="15" fill="rgb(205,185,37)" fg:x="224464076" fg:w="3132772"/><text x="25.1187%" y="143.50"></text></g><g><title>core::hash::Hasher::write_u32 (3,132,772 samples, 0.35%)</title><rect x="24.8687%" y="117" width="0.3471%" height="15" fill="rgb(238,207,15)" fg:x="224464076" fg:w="3132772"/><text x="25.1187%" y="127.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3,132,772 samples, 0.35%)</title><rect x="24.8687%" y="101" width="0.3471%" height="15" fill="rgb(213,199,42)" fg:x="224464076" fg:w="3132772"/><text x="25.1187%" y="111.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3,132,772 samples, 0.35%)</title><rect x="24.8687%" y="85" width="0.3471%" height="15" fill="rgb(235,201,11)" fg:x="224464076" fg:w="3132772"/><text x="25.1187%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,132,772 samples, 0.35%)</title><rect x="24.8687%" y="69" width="0.3471%" height="15" fill="rgb(207,46,11)" fg:x="224464076" fg:w="3132772"/><text x="25.1187%" y="79.50"></text></g><g><title>core::hash::sip::u8to64_le (3,132,772 samples, 0.35%)</title><rect x="24.8687%" y="53" width="0.3471%" height="15" fill="rgb(241,35,35)" fg:x="224464076" fg:w="3132772"/><text x="25.1187%" y="63.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8,147,596 samples, 0.90%)</title><rect x="25.2158%" y="53" width="0.9027%" height="15" fill="rgb(243,32,47)" fg:x="227596848" fg:w="8147596"/><text x="25.4658%" y="63.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5,035,392 samples, 0.56%)</title><rect x="25.5606%" y="37" width="0.5579%" height="15" fill="rgb(247,202,23)" fg:x="230709052" fg:w="5035392"/><text x="25.8106%" y="47.50"></text></g><g><title>hashbrown::map::make_hash (30,293,610 samples, 3.36%)</title><rect x="23.1078%" y="245" width="3.3563%" height="15" fill="rgb(219,102,11)" fg:x="208570590" fg:w="30293610"/><text x="23.3578%" y="255.50">has..</text></g><g><title>core::hash::BuildHasher::hash_one (30,293,610 samples, 3.36%)</title><rect x="23.1078%" y="229" width="3.3563%" height="15" fill="rgb(243,110,44)" fg:x="208570590" fg:w="30293610"/><text x="23.3578%" y="239.50">cor..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (14,400,124 samples, 1.60%)</title><rect x="24.8687%" y="213" width="1.5954%" height="15" fill="rgb(222,74,54)" fg:x="224464076" fg:w="14400124"/><text x="25.1187%" y="223.50"></text></g><g><title>&lt;std::time::Instant as core::hash::Hash&gt;::hash (14,400,124 samples, 1.60%)</title><rect x="24.8687%" y="197" width="1.5954%" height="15" fill="rgb(216,99,12)" fg:x="224464076" fg:w="14400124"/><text x="25.1187%" y="207.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Instant as core::hash::Hash&gt;::hash (14,400,124 samples, 1.60%)</title><rect x="24.8687%" y="181" width="1.5954%" height="15" fill="rgb(226,22,26)" fg:x="224464076" fg:w="14400124"/><text x="25.1187%" y="191.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::hash::Hash&gt;::hash (14,400,124 samples, 1.60%)</title><rect x="24.8687%" y="165" width="1.5954%" height="15" fill="rgb(217,163,10)" fg:x="224464076" fg:w="14400124"/><text x="25.1187%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (11,267,352 samples, 1.25%)</title><rect x="25.2158%" y="149" width="1.2483%" height="15" fill="rgb(213,25,53)" fg:x="227596848" fg:w="11267352"/><text x="25.4658%" y="159.50"></text></g><g><title>core::hash::Hasher::write_i64 (11,267,352 samples, 1.25%)</title><rect x="25.2158%" y="133" width="1.2483%" height="15" fill="rgb(252,105,26)" fg:x="227596848" fg:w="11267352"/><text x="25.4658%" y="143.50"></text></g><g><title>core::hash::Hasher::write_u64 (11,267,352 samples, 1.25%)</title><rect x="25.2158%" y="117" width="1.2483%" height="15" fill="rgb(220,39,43)" fg:x="227596848" fg:w="11267352"/><text x="25.4658%" y="127.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (11,267,352 samples, 1.25%)</title><rect x="25.2158%" y="101" width="1.2483%" height="15" fill="rgb(229,68,48)" fg:x="227596848" fg:w="11267352"/><text x="25.4658%" y="111.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11,267,352 samples, 1.25%)</title><rect x="25.2158%" y="85" width="1.2483%" height="15" fill="rgb(252,8,32)" fg:x="227596848" fg:w="11267352"/><text x="25.4658%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11,267,352 samples, 1.25%)</title><rect x="25.2158%" y="69" width="1.2483%" height="15" fill="rgb(223,20,43)" fg:x="227596848" fg:w="11267352"/><text x="25.4658%" y="79.50"></text></g><g><title>core::hash::sip::u8to64_le (3,119,756 samples, 0.35%)</title><rect x="26.1184%" y="53" width="0.3456%" height="15" fill="rgb(229,81,49)" fg:x="235744444" fg:w="3119756"/><text x="26.3684%" y="63.50"></text></g><g><title>hashbrown::raw::h2 (8,206,660 samples, 0.91%)</title><rect x="26.4641%" y="197" width="0.9092%" height="15" fill="rgb(236,28,36)" fg:x="238864200" fg:w="8206660"/><text x="26.7141%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (78,137,804 samples, 8.66%)</title><rect x="19.0039%" y="389" width="8.6570%" height="15" fill="rgb(249,185,26)" fg:x="171528637" fg:w="78137804"/><text x="19.2539%" y="399.50">&lt;core::iter:..</text></g><g><title>core::iter::traits::iterator::Iterator::find (78,137,804 samples, 8.66%)</title><rect x="19.0039%" y="373" width="8.6570%" height="15" fill="rgb(249,174,33)" fg:x="171528637" fg:w="78137804"/><text x="19.2539%" y="383.50">core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (78,137,804 samples, 8.66%)</title><rect x="19.0039%" y="357" width="8.6570%" height="15" fill="rgb(233,201,37)" fg:x="171528637" fg:w="78137804"/><text x="19.2539%" y="367.50">core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (58,251,394 samples, 6.45%)</title><rect x="21.2071%" y="341" width="6.4538%" height="15" fill="rgb(221,78,26)" fg:x="191415047" fg:w="58251394"/><text x="21.4571%" y="351.50">core::it..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (58,251,394 samples, 6.45%)</title><rect x="21.2071%" y="325" width="6.4538%" height="15" fill="rgb(250,127,30)" fg:x="191415047" fg:w="58251394"/><text x="21.4571%" y="335.50">core::op..</text></g><g><title>eportal_rust::amain::_{{closure}}::_{{closure}} (58,251,394 samples, 6.45%)</title><rect x="21.2071%" y="309" width="6.4538%" height="15" fill="rgb(230,49,44)" fg:x="191415047" fg:w="58251394"/><text x="21.4571%" y="319.50">eportal_..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (41,095,851 samples, 4.55%)</title><rect x="23.1078%" y="293" width="4.5531%" height="15" fill="rgb(229,67,23)" fg:x="208570590" fg:w="41095851"/><text x="23.3578%" y="303.50">std::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (41,095,851 samples, 4.55%)</title><rect x="23.1078%" y="277" width="4.5531%" height="15" fill="rgb(249,83,47)" fg:x="208570590" fg:w="41095851"/><text x="23.3578%" y="287.50">hashb..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (41,095,851 samples, 4.55%)</title><rect x="23.1078%" y="261" width="4.5531%" height="15" fill="rgb(215,43,3)" fg:x="208570590" fg:w="41095851"/><text x="23.3578%" y="271.50">hashb..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10,802,241 samples, 1.20%)</title><rect x="26.4641%" y="245" width="1.1968%" height="15" fill="rgb(238,154,13)" fg:x="238864200" fg:w="10802241"/><text x="26.7141%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10,802,241 samples, 1.20%)</title><rect x="26.4641%" y="229" width="1.1968%" height="15" fill="rgb(219,56,2)" fg:x="238864200" fg:w="10802241"/><text x="26.7141%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (10,802,241 samples, 1.20%)</title><rect x="26.4641%" y="213" width="1.1968%" height="15" fill="rgb(233,0,4)" fg:x="238864200" fg:w="10802241"/><text x="26.7141%" y="223.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2,595,581 samples, 0.29%)</title><rect x="27.3733%" y="197" width="0.2876%" height="15" fill="rgb(235,30,7)" fg:x="247070860" fg:w="2595581"/><text x="27.6233%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2,595,581 samples, 0.29%)</title><rect x="27.3733%" y="181" width="0.2876%" height="15" fill="rgb(250,79,13)" fg:x="247070860" fg:w="2595581"/><text x="27.6233%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (79,711,681 samples, 8.83%)</title><rect x="19.0039%" y="421" width="8.8314%" height="15" fill="rgb(211,146,34)" fg:x="171528637" fg:w="79711681"/><text x="19.2539%" y="431.50">&lt;alloc::vec:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (79,711,681 samples, 8.83%)</title><rect x="19.0039%" y="405" width="8.8314%" height="15" fill="rgb(228,22,38)" fg:x="171528637" fg:w="79711681"/><text x="19.2539%" y="415.50">alloc::vec::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,573,877 samples, 0.17%)</title><rect x="27.6609%" y="389" width="0.1744%" height="15" fill="rgb(235,168,5)" fg:x="249666441" fg:w="1573877"/><text x="27.9109%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,573,877 samples, 0.17%)</title><rect x="27.6609%" y="373" width="0.1744%" height="15" fill="rgb(221,155,16)" fg:x="249666441" fg:w="1573877"/><text x="27.9109%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,573,877 samples, 0.17%)</title><rect x="27.6609%" y="357" width="0.1744%" height="15" fill="rgb(215,215,53)" fg:x="249666441" fg:w="1573877"/><text x="27.9109%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,573,877 samples, 0.17%)</title><rect x="27.6609%" y="341" width="0.1744%" height="15" fill="rgb(223,4,10)" fg:x="249666441" fg:w="1573877"/><text x="27.9109%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,573,877 samples, 0.17%)</title><rect x="27.6609%" y="325" width="0.1744%" height="15" fill="rgb(234,103,6)" fg:x="249666441" fg:w="1573877"/><text x="27.9109%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,573,877 samples, 0.17%)</title><rect x="27.6609%" y="309" width="0.1744%" height="15" fill="rgb(227,97,0)" fg:x="249666441" fg:w="1573877"/><text x="27.9109%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,573,877 samples, 0.17%)</title><rect x="27.6609%" y="293" width="0.1744%" height="15" fill="rgb(234,150,53)" fg:x="249666441" fg:w="1573877"/><text x="27.9109%" y="303.50"></text></g><g><title>alloc::alloc::realloc (1,573,877 samples, 0.17%)</title><rect x="27.6609%" y="277" width="0.1744%" height="15" fill="rgb(228,201,54)" fg:x="249666441" fg:w="1573877"/><text x="27.9109%" y="287.50"></text></g><g><title>__rdl_realloc (1,573,877 samples, 0.17%)</title><rect x="27.6609%" y="261" width="0.1744%" height="15" fill="rgb(222,22,37)" fg:x="249666441" fg:w="1573877"/><text x="27.9109%" y="271.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1,573,877 samples, 0.17%)</title><rect x="27.6609%" y="245" width="0.1744%" height="15" fill="rgb(237,53,32)" fg:x="249666441" fg:w="1573877"/><text x="27.9109%" y="255.50"></text></g><g><title>realloc (1,573,877 samples, 0.17%)</title><rect x="27.6609%" y="229" width="0.1744%" height="15" fill="rgb(233,25,53)" fg:x="249666441" fg:w="1573877"/><text x="27.9109%" y="239.50"></text></g><g><title>[libc.so.6] (1,573,877 samples, 0.17%)</title><rect x="27.6609%" y="213" width="0.1744%" height="15" fill="rgb(210,40,34)" fg:x="249666441" fg:w="1573877"/><text x="27.9109%" y="223.50"></text></g><g><title>[libc.so.6] (1,573,877 samples, 0.17%)</title><rect x="27.6609%" y="197" width="0.1744%" height="15" fill="rgb(241,220,44)" fg:x="249666441" fg:w="1573877"/><text x="27.9109%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2,668,558 samples, 0.30%)</title><rect x="27.8353%" y="405" width="0.2957%" height="15" fill="rgb(235,28,35)" fg:x="251240318" fg:w="2668558"/><text x="28.0853%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,668,558 samples, 0.30%)</title><rect x="27.8353%" y="389" width="0.2957%" height="15" fill="rgb(210,56,17)" fg:x="251240318" fg:w="2668558"/><text x="28.0853%" y="399.50"></text></g><g><title>eportal_rust::amain::_{{closure}}::_{{closure}} (2,668,558 samples, 0.30%)</title><rect x="27.8353%" y="373" width="0.2957%" height="15" fill="rgb(224,130,29)" fg:x="251240318" fg:w="2668558"/><text x="28.0853%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,668,558 samples, 0.30%)</title><rect x="27.8353%" y="357" width="0.2957%" height="15" fill="rgb(235,212,8)" fg:x="251240318" fg:w="2668558"/><text x="28.0853%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,668,558 samples, 0.30%)</title><rect x="27.8353%" y="341" width="0.2957%" height="15" fill="rgb(223,33,50)" fg:x="251240318" fg:w="2668558"/><text x="28.0853%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,668,558 samples, 0.30%)</title><rect x="27.8353%" y="325" width="0.2957%" height="15" fill="rgb(219,149,13)" fg:x="251240318" fg:w="2668558"/><text x="28.0853%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (2,668,558 samples, 0.30%)</title><rect x="27.8353%" y="309" width="0.2957%" height="15" fill="rgb(250,156,29)" fg:x="251240318" fg:w="2668558"/><text x="28.0853%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,668,558 samples, 0.30%)</title><rect x="27.8353%" y="293" width="0.2957%" height="15" fill="rgb(216,193,19)" fg:x="251240318" fg:w="2668558"/><text x="28.0853%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,668,558 samples, 0.30%)</title><rect x="27.8353%" y="277" width="0.2957%" height="15" fill="rgb(216,135,14)" fg:x="251240318" fg:w="2668558"/><text x="28.0853%" y="287.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (20,317,468 samples, 2.25%)</title><rect x="31.1139%" y="293" width="2.2510%" height="15" fill="rgb(241,47,5)" fg:x="280832882" fg:w="20317468"/><text x="31.3639%" y="303.50">h..</text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (3,208,470 samples, 0.36%)</title><rect x="33.0094%" y="277" width="0.3555%" height="15" fill="rgb(233,42,35)" fg:x="297941880" fg:w="3208470"/><text x="33.2594%" y="287.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (3,208,470 samples, 0.36%)</title><rect x="33.0094%" y="261" width="0.3555%" height="15" fill="rgb(231,13,6)" fg:x="297941880" fg:w="3208470"/><text x="33.2594%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (50,008,047 samples, 5.54%)</title><rect x="30.5476%" y="309" width="5.5405%" height="15" fill="rgb(207,181,40)" fg:x="275721971" fg:w="50008047"/><text x="30.7976%" y="319.50">&lt;hashbr..</text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (24,579,668 samples, 2.72%)</title><rect x="33.3649%" y="293" width="2.7232%" height="15" fill="rgb(254,173,49)" fg:x="301150350" fg:w="24579668"/><text x="33.6149%" y="303.50">ha..</text></g><g><title>core::num::&lt;impl isize&gt;::unchecked_neg (8,254,991 samples, 0.91%)</title><rect x="36.0881%" y="277" width="0.9146%" height="15" fill="rgb(221,1,38)" fg:x="325730018" fg:w="8254991"/><text x="36.3381%" y="287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (16,290,412 samples, 1.80%)</title><rect x="36.0881%" y="309" width="1.8048%" height="15" fill="rgb(206,124,46)" fg:x="325730018" fg:w="16290412"/><text x="36.3381%" y="319.50">h..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (16,290,412 samples, 1.80%)</title><rect x="36.0881%" y="293" width="1.8048%" height="15" fill="rgb(249,21,11)" fg:x="325730018" fg:w="16290412"/><text x="36.3381%" y="303.50">c..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8,035,421 samples, 0.89%)</title><rect x="37.0027%" y="277" width="0.8903%" height="15" fill="rgb(222,201,40)" fg:x="333985009" fg:w="8035421"/><text x="37.2527%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (5,858,335 samples, 0.65%)</title><rect x="37.8929%" y="309" width="0.6491%" height="15" fill="rgb(235,61,29)" fg:x="342020430" fg:w="5858335"/><text x="38.1429%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (5,858,335 samples, 0.65%)</title><rect x="37.8929%" y="293" width="0.6491%" height="15" fill="rgb(219,207,3)" fg:x="342020430" fg:w="5858335"/><text x="38.1429%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (98,376,111 samples, 10.90%)</title><rect x="28.1309%" y="373" width="10.8992%" height="15" fill="rgb(222,56,46)" fg:x="253908876" fg:w="98376111"/><text x="28.3809%" y="383.50">&lt;std::collection..</text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (98,376,111 samples, 10.90%)</title><rect x="28.1309%" y="357" width="10.8992%" height="15" fill="rgb(239,76,54)" fg:x="253908876" fg:w="98376111"/><text x="28.3809%" y="367.50">&lt;hashbrown::map:..</text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (98,376,111 samples, 10.90%)</title><rect x="28.1309%" y="341" width="10.8992%" height="15" fill="rgb(231,124,27)" fg:x="253908876" fg:w="98376111"/><text x="28.3809%" y="351.50">&lt;hashbrown::raw:..</text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (76,563,016 samples, 8.48%)</title><rect x="30.5476%" y="325" width="8.4825%" height="15" fill="rgb(249,195,6)" fg:x="275721971" fg:w="76563016"/><text x="30.7976%" y="335.50">hashbrown::r..</text></g><g><title>hashbrown::raw::sse2::Group::match_full (4,406,222 samples, 0.49%)</title><rect x="38.5420%" y="309" width="0.4882%" height="15" fill="rgb(237,174,47)" fg:x="347878765" fg:w="4406222"/><text x="38.7920%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4,406,222 samples, 0.49%)</title><rect x="38.5420%" y="293" width="0.4882%" height="15" fill="rgb(206,201,31)" fg:x="347878765" fg:w="4406222"/><text x="38.7920%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4,406,222 samples, 0.49%)</title><rect x="38.5420%" y="277" width="0.4882%" height="15" fill="rgb(231,57,52)" fg:x="347878765" fg:w="4406222"/><text x="38.7920%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (55,873,851 samples, 6.19%)</title><rect x="47.6910%" y="325" width="6.1903%" height="15" fill="rgb(248,177,22)" fg:x="430457794" fg:w="55873851"/><text x="47.9410%" y="335.50">core::cm..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (55,873,851 samples, 6.19%)</title><rect x="47.6910%" y="309" width="6.1903%" height="15" fill="rgb(215,211,37)" fg:x="430457794" fg:w="55873851"/><text x="47.9410%" y="319.50">core::cm..</text></g><g><title>core::cmp::PartialEq::ne (6,757,019 samples, 0.75%)</title><rect x="53.1327%" y="293" width="0.7486%" height="15" fill="rgb(241,128,51)" fg:x="479574626" fg:w="6757019"/><text x="53.3827%" y="303.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialEq&gt;::eq (6,757,019 samples, 0.75%)</title><rect x="53.1327%" y="277" width="0.7486%" height="15" fill="rgb(227,165,31)" fg:x="479574626" fg:w="6757019"/><text x="53.3827%" y="287.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Instant as core::cmp::PartialEq&gt;::eq (6,757,019 samples, 0.75%)</title><rect x="53.1327%" y="261" width="0.7486%" height="15" fill="rgb(228,167,24)" fg:x="479574626" fg:w="6757019"/><text x="53.3827%" y="271.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::cmp::PartialEq&gt;::eq (6,757,019 samples, 0.75%)</title><rect x="53.1327%" y="245" width="0.7486%" height="15" fill="rgb(228,143,12)" fg:x="479574626" fg:w="6757019"/><text x="53.3827%" y="255.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (6,305,448 samples, 0.70%)</title><rect x="53.8813%" y="309" width="0.6986%" height="15" fill="rgb(249,149,8)" fg:x="486331645" fg:w="6305448"/><text x="54.1313%" y="319.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (6,305,448 samples, 0.70%)</title><rect x="53.8813%" y="293" width="0.6986%" height="15" fill="rgb(243,35,44)" fg:x="486331645" fg:w="6305448"/><text x="54.1313%" y="303.50"></text></g><g><title>glam::f32::math::std_math::sqrt (27,340,389 samples, 3.03%)</title><rect x="54.5799%" y="293" width="3.0291%" height="15" fill="rgb(246,89,9)" fg:x="492637093" fg:w="27340389"/><text x="54.8299%" y="303.50">gla..</text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (27,340,389 samples, 3.03%)</title><rect x="54.5799%" y="277" width="3.0291%" height="15" fill="rgb(233,213,13)" fg:x="492637093" fg:w="27340389"/><text x="54.8299%" y="287.50">std..</text></g><g><title>glam::f32::vec2::Vec2::distance (52,037,989 samples, 5.77%)</title><rect x="53.8813%" y="325" width="5.7654%" height="15" fill="rgb(233,141,41)" fg:x="486331645" fg:w="52037989"/><text x="54.1313%" y="335.50">glam::f..</text></g><g><title>glam::f32::vec2::Vec2::length (45,732,541 samples, 5.07%)</title><rect x="54.5799%" y="309" width="5.0668%" height="15" fill="rgb(239,167,4)" fg:x="492637093" fg:w="45732541"/><text x="54.8299%" y="319.50">glam::..</text></g><g><title>glam::f32::vec2::Vec2::dot (18,392,152 samples, 2.04%)</title><rect x="57.6090%" y="293" width="2.0377%" height="15" fill="rgb(209,217,16)" fg:x="519977482" fg:w="18392152"/><text x="57.8590%" y="303.50">g..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (369,138,998 samples, 40.90%)</title><rect x="19.0039%" y="485" width="40.8974%" height="15" fill="rgb(219,88,35)" fg:x="171528637" fg:w="369138998"/><text x="19.2539%" y="495.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (369,138,998 samples, 40.90%)</title><rect x="19.0039%" y="469" width="40.8974%" height="15" fill="rgb(220,193,23)" fg:x="171528637" fg:w="369138998"/><text x="19.2539%" y="479.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (369,138,998 samples, 40.90%)</title><rect x="19.0039%" y="453" width="40.8974%" height="15" fill="rgb(230,90,52)" fg:x="171528637" fg:w="369138998"/><text x="19.2539%" y="463.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (369,138,998 samples, 40.90%)</title><rect x="19.0039%" y="437" width="40.8974%" height="15" fill="rgb(252,106,19)" fg:x="171528637" fg:w="369138998"/><text x="19.2539%" y="447.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromI..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (289,427,317 samples, 32.07%)</title><rect x="27.8353%" y="421" width="32.0660%" height="15" fill="rgb(206,74,20)" fg:x="251240318" fg:w="289427317"/><text x="28.0853%" y="431.50">&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::..</text></g><g><title>core::iter::traits::iterator::Iterator::find (286,758,759 samples, 31.77%)</title><rect x="28.1309%" y="405" width="31.7704%" height="15" fill="rgb(230,138,44)" fg:x="253908876" fg:w="286758759"/><text x="28.3809%" y="415.50">core::iter::traits::iterator::Iterator::find</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (286,758,759 samples, 31.77%)</title><rect x="28.1309%" y="389" width="31.7704%" height="15" fill="rgb(235,182,43)" fg:x="253908876" fg:w="286758759"/><text x="28.3809%" y="399.50">core::iter::traits::iterator::Iterator::try_fold</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (188,382,648 samples, 20.87%)</title><rect x="39.0301%" y="373" width="20.8712%" height="15" fill="rgb(242,16,51)" fg:x="352284987" fg:w="188382648"/><text x="39.2801%" y="383.50">core::iter::traits::iterator::Ite..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (188,382,648 samples, 20.87%)</title><rect x="39.0301%" y="357" width="20.8712%" height="15" fill="rgb(248,9,4)" fg:x="352284987" fg:w="188382648"/><text x="39.2801%" y="367.50">core::ops::function::impls::&lt;impl..</text></g><g><title>eportal_rust::amain::_{{closure}}::_{{closure}} (188,382,648 samples, 20.87%)</title><rect x="39.0301%" y="341" width="20.8712%" height="15" fill="rgb(210,31,22)" fg:x="352284987" fg:w="188382648"/><text x="39.2801%" y="351.50">eportal_rust::amain::_{{closure}}..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="325" width="0.2546%" height="15" fill="rgb(239,54,39)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="309" width="0.2546%" height="15" fill="rgb(230,99,41)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="293" width="0.2546%" height="15" fill="rgb(253,106,12)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="303.50"></text></g><g><title>hashbrown::map::make_hash (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="277" width="0.2546%" height="15" fill="rgb(213,46,41)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="261" width="0.2546%" height="15" fill="rgb(215,133,35)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="245" width="0.2546%" height="15" fill="rgb(213,28,5)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="255.50"></text></g><g><title>&lt;std::time::Instant as core::hash::Hash&gt;::hash (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="229" width="0.2546%" height="15" fill="rgb(215,77,49)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="239.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Instant as core::hash::Hash&gt;::hash (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="213" width="0.2546%" height="15" fill="rgb(248,100,22)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="223.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::hash::Hash&gt;::hash (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="197" width="0.2546%" height="15" fill="rgb(208,67,9)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="181" width="0.2546%" height="15" fill="rgb(219,133,21)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="191.50"></text></g><g><title>core::hash::Hasher::write_i64 (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="165" width="0.2546%" height="15" fill="rgb(246,46,29)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="175.50"></text></g><g><title>core::hash::Hasher::write_u64 (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="149" width="0.2546%" height="15" fill="rgb(246,185,52)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="159.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="133" width="0.2546%" height="15" fill="rgb(252,136,11)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="117" width="0.2546%" height="15" fill="rgb(219,138,53)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="101" width="0.2546%" height="15" fill="rgb(211,51,23)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="85" width="0.2546%" height="15" fill="rgb(247,221,28)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2,298,001 samples, 0.25%)</title><rect x="59.6467%" y="69" width="0.2546%" height="15" fill="rgb(251,222,45)" fg:x="538369634" fg:w="2298001"/><text x="59.8967%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(&amp;&amp;std::time::Instant,&amp;&amp;eportal_rust::plant::Plant)&gt;&gt; (3,231,179 samples, 0.36%)</title><rect x="59.9013%" y="485" width="0.3580%" height="15" fill="rgb(217,162,53)" fg:x="540667635" fg:w="3231179"/><text x="60.1513%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(&amp;&amp;std::time::Instant,&amp;&amp;eportal_rust::plant::Plant)&gt;&gt; (3,231,179 samples, 0.36%)</title><rect x="59.9013%" y="469" width="0.3580%" height="15" fill="rgb(229,93,14)" fg:x="540667635" fg:w="3231179"/><text x="60.1513%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,231,179 samples, 0.36%)</title><rect x="59.9013%" y="453" width="0.3580%" height="15" fill="rgb(209,67,49)" fg:x="540667635" fg:w="3231179"/><text x="60.1513%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,231,179 samples, 0.36%)</title><rect x="59.9013%" y="437" width="0.3580%" height="15" fill="rgb(213,87,29)" fg:x="540667635" fg:w="3231179"/><text x="60.1513%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (3,231,179 samples, 0.36%)</title><rect x="59.9013%" y="421" width="0.3580%" height="15" fill="rgb(205,151,52)" fg:x="540667635" fg:w="3231179"/><text x="60.1513%" y="431.50"></text></g><g><title>__rdl_dealloc (3,231,179 samples, 0.36%)</title><rect x="59.9013%" y="405" width="0.3580%" height="15" fill="rgb(253,215,39)" fg:x="540667635" fg:w="3231179"/><text x="60.1513%" y="415.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,231,179 samples, 0.36%)</title><rect x="59.9013%" y="389" width="0.3580%" height="15" fill="rgb(221,220,41)" fg:x="540667635" fg:w="3231179"/><text x="60.1513%" y="399.50"></text></g><g><title>cfree (3,231,179 samples, 0.36%)</title><rect x="59.9013%" y="373" width="0.3580%" height="15" fill="rgb(218,133,21)" fg:x="540667635" fg:w="3231179"/><text x="60.1513%" y="383.50"></text></g><g><title>[libc.so.6] (3,231,179 samples, 0.36%)</title><rect x="59.9013%" y="357" width="0.3580%" height="15" fill="rgb(221,193,43)" fg:x="540667635" fg:w="3231179"/><text x="60.1513%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(&amp;std::time::Instant,&amp;eportal_rust::body::Body)&gt;&gt; (2,695,483 samples, 0.30%)</title><rect x="60.2593%" y="485" width="0.2986%" height="15" fill="rgb(240,128,52)" fg:x="543898814" fg:w="2695483"/><text x="60.5093%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(&amp;std::time::Instant,&amp;eportal_rust::body::Body)&gt;&gt; (2,695,483 samples, 0.30%)</title><rect x="60.2593%" y="469" width="0.2986%" height="15" fill="rgb(253,114,12)" fg:x="543898814" fg:w="2695483"/><text x="60.5093%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,695,483 samples, 0.30%)</title><rect x="60.2593%" y="453" width="0.2986%" height="15" fill="rgb(215,223,47)" fg:x="543898814" fg:w="2695483"/><text x="60.5093%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,695,483 samples, 0.30%)</title><rect x="60.2593%" y="437" width="0.2986%" height="15" fill="rgb(248,225,23)" fg:x="543898814" fg:w="2695483"/><text x="60.5093%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (2,695,483 samples, 0.30%)</title><rect x="60.2593%" y="421" width="0.2986%" height="15" fill="rgb(250,108,0)" fg:x="543898814" fg:w="2695483"/><text x="60.5093%" y="431.50"></text></g><g><title>__rdl_dealloc (2,695,483 samples, 0.30%)</title><rect x="60.2593%" y="405" width="0.2986%" height="15" fill="rgb(228,208,7)" fg:x="543898814" fg:w="2695483"/><text x="60.5093%" y="415.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,695,483 samples, 0.30%)</title><rect x="60.2593%" y="389" width="0.2986%" height="15" fill="rgb(244,45,10)" fg:x="543898814" fg:w="2695483"/><text x="60.5093%" y="399.50"></text></g><g><title>cfree (2,695,483 samples, 0.30%)</title><rect x="60.2593%" y="373" width="0.2986%" height="15" fill="rgb(207,125,25)" fg:x="543898814" fg:w="2695483"/><text x="60.5093%" y="383.50"></text></g><g><title>[libc.so.6] (2,695,483 samples, 0.30%)</title><rect x="60.2593%" y="357" width="0.2986%" height="15" fill="rgb(210,195,18)" fg:x="543898814" fg:w="2695483"/><text x="60.5093%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;&amp;std::time::Instant,&amp;eportal_rust::plant::Plant&gt;&gt; (1,054,047 samples, 0.12%)</title><rect x="60.5579%" y="485" width="0.1168%" height="15" fill="rgb(249,80,12)" fg:x="546594297" fg:w="1054047"/><text x="60.8079%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;&amp;std::time::Instant,&amp;eportal_rust::plant::Plant,std::hash::random::RandomState&gt;&gt; (1,054,047 samples, 0.12%)</title><rect x="60.5579%" y="469" width="0.1168%" height="15" fill="rgb(221,65,9)" fg:x="546594297" fg:w="1054047"/><text x="60.8079%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(&amp;std::time::Instant,&amp;eportal_rust::plant::Plant)&gt;&gt; (1,054,047 samples, 0.12%)</title><rect x="60.5579%" y="453" width="0.1168%" height="15" fill="rgb(235,49,36)" fg:x="546594297" fg:w="1054047"/><text x="60.8079%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,054,047 samples, 0.12%)</title><rect x="60.5579%" y="437" width="0.1168%" height="15" fill="rgb(225,32,20)" fg:x="546594297" fg:w="1054047"/><text x="60.8079%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,054,047 samples, 0.12%)</title><rect x="60.5579%" y="421" width="0.1168%" height="15" fill="rgb(215,141,46)" fg:x="546594297" fg:w="1054047"/><text x="60.8079%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,054,047 samples, 0.12%)</title><rect x="60.5579%" y="405" width="0.1168%" height="15" fill="rgb(250,160,47)" fg:x="546594297" fg:w="1054047"/><text x="60.8079%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,054,047 samples, 0.12%)</title><rect x="60.5579%" y="389" width="0.1168%" height="15" fill="rgb(216,222,40)" fg:x="546594297" fg:w="1054047"/><text x="60.8079%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (1,054,047 samples, 0.12%)</title><rect x="60.5579%" y="373" width="0.1168%" height="15" fill="rgb(234,217,39)" fg:x="546594297" fg:w="1054047"/><text x="60.8079%" y="383.50"></text></g><g><title>__rdl_dealloc (1,054,047 samples, 0.12%)</title><rect x="60.5579%" y="357" width="0.1168%" height="15" fill="rgb(207,178,40)" fg:x="546594297" fg:w="1054047"/><text x="60.8079%" y="367.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,054,047 samples, 0.12%)</title><rect x="60.5579%" y="341" width="0.1168%" height="15" fill="rgb(221,136,13)" fg:x="546594297" fg:w="1054047"/><text x="60.8079%" y="351.50"></text></g><g><title>cfree (1,054,047 samples, 0.12%)</title><rect x="60.5579%" y="325" width="0.1168%" height="15" fill="rgb(249,199,10)" fg:x="546594297" fg:w="1054047"/><text x="60.8079%" y="335.50"></text></g><g><title>[libc.so.6] (1,054,047 samples, 0.12%)</title><rect x="60.5579%" y="309" width="0.1168%" height="15" fill="rgb(249,222,13)" fg:x="546594297" fg:w="1054047"/><text x="60.8079%" y="319.50"></text></g><g><title>[libc.so.6] (1,054,047 samples, 0.12%)</title><rect x="60.5579%" y="293" width="0.1168%" height="15" fill="rgb(244,185,38)" fg:x="546594297" fg:w="1054047"/><text x="60.8079%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;eportal_rust::body::Virus,f32&gt;&gt; (3,403,300 samples, 0.38%)</title><rect x="60.9129%" y="325" width="0.3771%" height="15" fill="rgb(236,202,9)" fg:x="549798187" fg:w="3403300"/><text x="61.1629%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;eportal_rust::body::Virus,f32,std::hash::random::RandomState&gt;&gt; (3,403,300 samples, 0.38%)</title><rect x="60.9129%" y="309" width="0.3771%" height="15" fill="rgb(250,229,37)" fg:x="549798187" fg:w="3403300"/><text x="61.1629%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(eportal_rust::body::Virus,f32)&gt;&gt; (3,403,300 samples, 0.38%)</title><rect x="60.9129%" y="293" width="0.3771%" height="15" fill="rgb(206,174,23)" fg:x="549798187" fg:w="3403300"/><text x="61.1629%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,403,300 samples, 0.38%)</title><rect x="60.9129%" y="277" width="0.3771%" height="15" fill="rgb(211,33,43)" fg:x="549798187" fg:w="3403300"/><text x="61.1629%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,403,300 samples, 0.38%)</title><rect x="60.9129%" y="261" width="0.3771%" height="15" fill="rgb(245,58,50)" fg:x="549798187" fg:w="3403300"/><text x="61.1629%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,403,300 samples, 0.38%)</title><rect x="60.9129%" y="245" width="0.3771%" height="15" fill="rgb(244,68,36)" fg:x="549798187" fg:w="3403300"/><text x="61.1629%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,403,300 samples, 0.38%)</title><rect x="60.9129%" y="229" width="0.3771%" height="15" fill="rgb(232,229,15)" fg:x="549798187" fg:w="3403300"/><text x="61.1629%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (3,403,300 samples, 0.38%)</title><rect x="60.9129%" y="213" width="0.3771%" height="15" fill="rgb(254,30,23)" fg:x="549798187" fg:w="3403300"/><text x="61.1629%" y="223.50"></text></g><g><title>__rdl_dealloc (3,403,300 samples, 0.38%)</title><rect x="60.9129%" y="197" width="0.3771%" height="15" fill="rgb(235,160,14)" fg:x="549798187" fg:w="3403300"/><text x="61.1629%" y="207.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,403,300 samples, 0.38%)</title><rect x="60.9129%" y="181" width="0.3771%" height="15" fill="rgb(212,155,44)" fg:x="549798187" fg:w="3403300"/><text x="61.1629%" y="191.50"></text></g><g><title>cfree (3,403,300 samples, 0.38%)</title><rect x="60.9129%" y="165" width="0.3771%" height="15" fill="rgb(226,2,50)" fg:x="549798187" fg:w="3403300"/><text x="61.1629%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;std::time::Instant,eportal_rust::body::Body&gt;&gt; (8,303,170 samples, 0.92%)</title><rect x="60.6747%" y="485" width="0.9199%" height="15" fill="rgb(234,177,6)" fg:x="547648344" fg:w="8303170"/><text x="60.9247%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;std::time::Instant,eportal_rust::body::Body,std::hash::random::RandomState&gt;&gt; (8,303,170 samples, 0.92%)</title><rect x="60.6747%" y="469" width="0.9199%" height="15" fill="rgb(217,24,9)" fg:x="547648344" fg:w="8303170"/><text x="60.9247%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(std::time::Instant,eportal_rust::body::Body)&gt;&gt; (8,303,170 samples, 0.92%)</title><rect x="60.6747%" y="453" width="0.9199%" height="15" fill="rgb(220,13,46)" fg:x="547648344" fg:w="8303170"/><text x="60.9247%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,303,170 samples, 0.92%)</title><rect x="60.6747%" y="437" width="0.9199%" height="15" fill="rgb(239,221,27)" fg:x="547648344" fg:w="8303170"/><text x="60.9247%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (8,303,170 samples, 0.92%)</title><rect x="60.6747%" y="421" width="0.9199%" height="15" fill="rgb(222,198,25)" fg:x="547648344" fg:w="8303170"/><text x="60.9247%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (8,303,170 samples, 0.92%)</title><rect x="60.6747%" y="405" width="0.9199%" height="15" fill="rgb(211,99,13)" fg:x="547648344" fg:w="8303170"/><text x="60.9247%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (8,303,170 samples, 0.92%)</title><rect x="60.6747%" y="389" width="0.9199%" height="15" fill="rgb(232,111,31)" fg:x="547648344" fg:w="8303170"/><text x="60.9247%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (8,303,170 samples, 0.92%)</title><rect x="60.6747%" y="373" width="0.9199%" height="15" fill="rgb(245,82,37)" fg:x="547648344" fg:w="8303170"/><text x="60.9247%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;(std::time::Instant,eportal_rust::body::Body)&gt; (8,303,170 samples, 0.92%)</title><rect x="60.6747%" y="357" width="0.9199%" height="15" fill="rgb(227,149,46)" fg:x="547648344" fg:w="8303170"/><text x="60.9247%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;eportal_rust::body::Body&gt; (8,303,170 samples, 0.92%)</title><rect x="60.6747%" y="341" width="0.9199%" height="15" fill="rgb(218,36,50)" fg:x="547648344" fg:w="8303170"/><text x="60.9247%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;eportal_rust::body::Skill&gt;&gt; (2,750,027 samples, 0.30%)</title><rect x="61.2899%" y="325" width="0.3047%" height="15" fill="rgb(226,80,48)" fg:x="553201487" fg:w="2750027"/><text x="61.5399%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;eportal_rust::body::Skill,std::hash::random::RandomState&gt;&gt; (2,750,027 samples, 0.30%)</title><rect x="61.2899%" y="309" width="0.3047%" height="15" fill="rgb(238,224,15)" fg:x="553201487" fg:w="2750027"/><text x="61.5399%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;eportal_rust::body::Skill,(),std::hash::random::RandomState&gt;&gt; (2,750,027 samples, 0.30%)</title><rect x="61.2899%" y="293" width="0.3047%" height="15" fill="rgb(241,136,10)" fg:x="553201487" fg:w="2750027"/><text x="61.5399%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(eportal_rust::body::Skill,())&gt;&gt; (2,750,027 samples, 0.30%)</title><rect x="61.2899%" y="277" width="0.3047%" height="15" fill="rgb(208,32,45)" fg:x="553201487" fg:w="2750027"/><text x="61.5399%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,750,027 samples, 0.30%)</title><rect x="61.2899%" y="261" width="0.3047%" height="15" fill="rgb(207,135,9)" fg:x="553201487" fg:w="2750027"/><text x="61.5399%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,750,027 samples, 0.30%)</title><rect x="61.2899%" y="245" width="0.3047%" height="15" fill="rgb(206,86,44)" fg:x="553201487" fg:w="2750027"/><text x="61.5399%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2,750,027 samples, 0.30%)</title><rect x="61.2899%" y="229" width="0.3047%" height="15" fill="rgb(245,177,15)" fg:x="553201487" fg:w="2750027"/><text x="61.5399%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,750,027 samples, 0.30%)</title><rect x="61.2899%" y="213" width="0.3047%" height="15" fill="rgb(206,64,50)" fg:x="553201487" fg:w="2750027"/><text x="61.5399%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (2,750,027 samples, 0.30%)</title><rect x="61.2899%" y="197" width="0.3047%" height="15" fill="rgb(234,36,40)" fg:x="553201487" fg:w="2750027"/><text x="61.5399%" y="207.50"></text></g><g><title>__rdl_dealloc (2,750,027 samples, 0.30%)</title><rect x="61.2899%" y="181" width="0.3047%" height="15" fill="rgb(213,64,8)" fg:x="553201487" fg:w="2750027"/><text x="61.5399%" y="191.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,750,027 samples, 0.30%)</title><rect x="61.2899%" y="165" width="0.3047%" height="15" fill="rgb(210,75,36)" fg:x="553201487" fg:w="2750027"/><text x="61.5399%" y="175.50"></text></g><g><title>cfree (2,750,027 samples, 0.30%)</title><rect x="61.2899%" y="149" width="0.3047%" height="15" fill="rgb(229,88,21)" fg:x="553201487" fg:w="2750027"/><text x="61.5399%" y="159.50"></text></g><g><title>[libc.so.6] (2,750,027 samples, 0.30%)</title><rect x="61.2899%" y="133" width="0.3047%" height="15" fill="rgb(252,204,47)" fg:x="553201487" fg:w="2750027"/><text x="61.5399%" y="143.50"></text></g><g><title>eportal_rust::body::Body::draw_info (2,483,161 samples, 0.28%)</title><rect x="61.5946%" y="485" width="0.2751%" height="15" fill="rgb(208,77,27)" fg:x="555951514" fg:w="2483161"/><text x="61.8446%" y="495.50"></text></g><g><title>macroquad::text::draw_text (2,483,161 samples, 0.28%)</title><rect x="61.5946%" y="469" width="0.2751%" height="15" fill="rgb(221,76,26)" fg:x="555951514" fg:w="2483161"/><text x="61.8446%" y="479.50"></text></g><g><title>macroquad::text::draw_text_ex (2,483,161 samples, 0.28%)</title><rect x="61.5946%" y="453" width="0.2751%" height="15" fill="rgb(225,139,18)" fg:x="555951514" fg:w="2483161"/><text x="61.8446%" y="463.50"></text></g><g><title>macroquad::texture::draw_texture_ex (2,483,161 samples, 0.28%)</title><rect x="61.5946%" y="437" width="0.2751%" height="15" fill="rgb(230,137,11)" fg:x="555951514" fg:w="2483161"/><text x="61.8446%" y="447.50"></text></g><g><title>macroquad::quad_gl::QuadGl::geometry (2,483,161 samples, 0.28%)</title><rect x="61.5946%" y="421" width="0.2751%" height="15" fill="rgb(212,28,1)" fg:x="555951514" fg:w="2483161"/><text x="61.8446%" y="431.50"></text></g><g><title>macroquad::quad_gl::_&lt;impl core::convert::Into&lt;macroquad::quad_gl::Vertex&gt; for ([f32: 3],[f32: 2],[f32: 4])&gt;::into (2,483,161 samples, 0.28%)</title><rect x="61.5946%" y="405" width="0.2751%" height="15" fill="rgb(248,164,17)" fg:x="555951514" fg:w="2483161"/><text x="61.8446%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::_{{closure}} (2,311,800 samples, 0.26%)</title><rect x="62.0278%" y="389" width="0.2561%" height="15" fill="rgb(222,171,42)" fg:x="559861723" fg:w="2311800"/><text x="62.2778%" y="399.50"></text></g><g><title>core::cmp::min_by (2,311,800 samples, 0.26%)</title><rect x="62.0278%" y="373" width="0.2561%" height="15" fill="rgb(243,84,45)" fg:x="559861723" fg:w="2311800"/><text x="62.2778%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,311,800 samples, 0.26%)</title><rect x="62.0278%" y="357" width="0.2561%" height="15" fill="rgb(252,49,23)" fg:x="559861723" fg:w="2311800"/><text x="62.2778%" y="367.50"></text></g><g><title>eportal_rust::body::Body::find_closest_plant::_{{closure}} (2,311,800 samples, 0.26%)</title><rect x="62.0278%" y="341" width="0.2561%" height="15" fill="rgb(215,19,7)" fg:x="559861723" fg:w="2311800"/><text x="62.2778%" y="351.50"></text></g><g><title>glam::f32::vec2::Vec2::distance (2,311,800 samples, 0.26%)</title><rect x="62.0278%" y="325" width="0.2561%" height="15" fill="rgb(238,81,41)" fg:x="559861723" fg:w="2311800"/><text x="62.2778%" y="335.50"></text></g><g><title>glam::f32::vec2::Vec2::length (2,311,800 samples, 0.26%)</title><rect x="62.0278%" y="309" width="0.2561%" height="15" fill="rgb(210,199,37)" fg:x="559861723" fg:w="2311800"/><text x="62.2778%" y="319.50"></text></g><g><title>glam::f32::math::std_math::sqrt (2,311,800 samples, 0.26%)</title><rect x="62.0278%" y="293" width="0.2561%" height="15" fill="rgb(244,192,49)" fg:x="559861723" fg:w="2311800"/><text x="62.2778%" y="303.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (2,311,800 samples, 0.26%)</title><rect x="62.0278%" y="277" width="0.2561%" height="15" fill="rgb(226,211,11)" fg:x="559861723" fg:w="2311800"/><text x="62.2778%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,240,369 samples, 0.69%)</title><rect x="61.8697%" y="437" width="0.6914%" height="15" fill="rgb(236,162,54)" fg:x="558434675" fg:w="6240369"/><text x="62.1197%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,240,369 samples, 0.69%)</title><rect x="61.8697%" y="421" width="0.6914%" height="15" fill="rgb(220,229,9)" fg:x="558434675" fg:w="6240369"/><text x="62.1197%" y="431.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::_{{closure}} (4,813,321 samples, 0.53%)</title><rect x="62.0278%" y="405" width="0.5333%" height="15" fill="rgb(250,87,22)" fg:x="559861723" fg:w="4813321"/><text x="62.2778%" y="415.50"></text></g><g><title>eportal_rust::body::Body::find_closest_plant::_{{closure}} (2,501,521 samples, 0.28%)</title><rect x="62.2840%" y="389" width="0.2771%" height="15" fill="rgb(239,43,17)" fg:x="562173523" fg:w="2501521"/><text x="62.5340%" y="399.50"></text></g><g><title>&lt;eportal_rust::plant::PlantKind as core::cmp::PartialEq&gt;::eq (2,501,521 samples, 0.28%)</title><rect x="62.2840%" y="373" width="0.2771%" height="15" fill="rgb(231,177,25)" fg:x="562173523" fg:w="2501521"/><text x="62.5340%" y="383.50"></text></g><g><title>eportal_rust::body::Body::find_closest_plant (12,249,748 samples, 1.36%)</title><rect x="61.8697%" y="485" width="1.3572%" height="15" fill="rgb(219,179,1)" fg:x="558434675" fg:w="12249748"/><text x="62.1197%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (12,249,748 samples, 1.36%)</title><rect x="61.8697%" y="469" width="1.3572%" height="15" fill="rgb(238,219,53)" fg:x="558434675" fg:w="12249748"/><text x="62.1197%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (12,249,748 samples, 1.36%)</title><rect x="61.8697%" y="453" width="1.3572%" height="15" fill="rgb(232,167,36)" fg:x="558434675" fg:w="12249748"/><text x="62.1197%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,009,379 samples, 0.67%)</title><rect x="62.5611%" y="437" width="0.6658%" height="15" fill="rgb(244,19,51)" fg:x="564675044" fg:w="6009379"/><text x="62.8111%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (6,009,379 samples, 0.67%)</title><rect x="62.5611%" y="421" width="0.6658%" height="15" fill="rgb(224,6,22)" fg:x="564675044" fg:w="6009379"/><text x="62.8111%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,009,379 samples, 0.67%)</title><rect x="62.5611%" y="405" width="0.6658%" height="15" fill="rgb(224,145,5)" fg:x="564675044" fg:w="6009379"/><text x="62.8111%" y="415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3,090,338 samples, 0.34%)</title><rect x="62.8845%" y="389" width="0.3424%" height="15" fill="rgb(234,130,49)" fg:x="567594085" fg:w="3090338"/><text x="63.1345%" y="399.50"></text></g><g><title>eportal_rust::body::Body::handle_viruses (3,155,689 samples, 0.35%)</title><rect x="63.2269%" y="485" width="0.3496%" height="15" fill="rgb(254,6,2)" fg:x="570684423" fg:w="3155689"/><text x="63.4769%" y="495.50"></text></g><g><title>macroquad::shapes::draw_triangle (3,118,678 samples, 0.35%)</title><rect x="63.8902%" y="469" width="0.3455%" height="15" fill="rgb(208,96,46)" fg:x="576671148" fg:w="3118678"/><text x="64.1402%" y="479.50"></text></g><g><title>macroquad::quad_gl::QuadGl::geometry (3,118,678 samples, 0.35%)</title><rect x="63.8902%" y="453" width="0.3455%" height="15" fill="rgb(239,3,39)" fg:x="576671148" fg:w="3118678"/><text x="64.1402%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (3,118,678 samples, 0.35%)</title><rect x="63.8902%" y="437" width="0.3455%" height="15" fill="rgb(233,210,1)" fg:x="576671148" fg:w="3118678"/><text x="64.1402%" y="447.50"></text></g><g><title>macroquad::quad_gl::QuadGl::geometry::_{{closure}} (3,118,678 samples, 0.35%)</title><rect x="63.8902%" y="421" width="0.3455%" height="15" fill="rgb(244,137,37)" fg:x="576671148" fg:w="3118678"/><text x="64.1402%" y="431.50"></text></g><g><title>core::cmp::PartialEq::ne (3,118,678 samples, 0.35%)</title><rect x="63.8902%" y="405" width="0.3455%" height="15" fill="rgb(240,136,2)" fg:x="576671148" fg:w="3118678"/><text x="64.1402%" y="415.50"></text></g><g><title>&lt;glam::f32::scalar::mat4::Mat4 as core::cmp::PartialEq&gt;::eq (3,118,678 samples, 0.35%)</title><rect x="63.8902%" y="389" width="0.3455%" height="15" fill="rgb(239,18,37)" fg:x="576671148" fg:w="3118678"/><text x="64.1402%" y="399.50"></text></g><g><title>&lt;glam::f32::scalar::vec4::Vec4 as core::cmp::PartialEq&gt;::eq (3,118,678 samples, 0.35%)</title><rect x="63.8902%" y="373" width="0.3455%" height="15" fill="rgb(218,185,22)" fg:x="576671148" fg:w="3118678"/><text x="64.1402%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3,088,919 samples, 0.34%)</title><rect x="64.2357%" y="421" width="0.3422%" height="15" fill="rgb(225,218,4)" fg:x="579789826" fg:w="3088919"/><text x="64.4857%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3,088,919 samples, 0.34%)</title><rect x="64.2357%" y="405" width="0.3422%" height="15" fill="rgb(230,182,32)" fg:x="579789826" fg:w="3088919"/><text x="64.4857%" y="415.50"></text></g><g><title>eportal_rust::plant::Plant::draw (12,168,368 samples, 1.35%)</title><rect x="63.5765%" y="485" width="1.3482%" height="15" fill="rgb(242,56,43)" fg:x="573840112" fg:w="12168368"/><text x="63.8265%" y="495.50"></text></g><g><title>macroquad::shapes::draw_triangle_lines (6,218,654 samples, 0.69%)</title><rect x="64.2357%" y="469" width="0.6890%" height="15" fill="rgb(233,99,24)" fg:x="579789826" fg:w="6218654"/><text x="64.4857%" y="479.50"></text></g><g><title>macroquad::shapes::draw_line (6,218,654 samples, 0.69%)</title><rect x="64.2357%" y="453" width="0.6890%" height="15" fill="rgb(234,209,42)" fg:x="579789826" fg:w="6218654"/><text x="64.4857%" y="463.50"></text></g><g><title>macroquad::quad_gl::QuadGl::geometry (6,218,654 samples, 0.69%)</title><rect x="64.2357%" y="437" width="0.6890%" height="15" fill="rgb(227,7,12)" fg:x="579789826" fg:w="6218654"/><text x="64.4857%" y="447.50"></text></g><g><title>macroquad::quad_gl::_&lt;impl core::convert::Into&lt;macroquad::quad_gl::Vertex&gt; for ([f32: 3],[f32: 2],[f32: 4])&gt;::into (3,129,735 samples, 0.35%)</title><rect x="64.5779%" y="421" width="0.3467%" height="15" fill="rgb(245,203,43)" fg:x="582878745" fg:w="3129735"/><text x="64.8279%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (3,139,930 samples, 0.35%)</title><rect x="64.9247%" y="469" width="0.3479%" height="15" fill="rgb(238,205,33)" fg:x="586008480" fg:w="3139930"/><text x="65.1747%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3,139,930 samples, 0.35%)</title><rect x="64.9247%" y="453" width="0.3479%" height="15" fill="rgb(231,56,7)" fg:x="586008480" fg:w="3139930"/><text x="65.1747%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,139,930 samples, 0.35%)</title><rect x="64.9247%" y="437" width="0.3479%" height="15" fill="rgb(244,186,29)" fg:x="586008480" fg:w="3139930"/><text x="65.1747%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3,139,930 samples, 0.35%)</title><rect x="64.9247%" y="421" width="0.3479%" height="15" fill="rgb(234,111,31)" fg:x="586008480" fg:w="3139930"/><text x="65.1747%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3,139,930 samples, 0.35%)</title><rect x="64.9247%" y="405" width="0.3479%" height="15" fill="rgb(241,149,10)" fg:x="586008480" fg:w="3139930"/><text x="65.1747%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3,139,930 samples, 0.35%)</title><rect x="64.9247%" y="389" width="0.3479%" height="15" fill="rgb(249,206,44)" fg:x="586008480" fg:w="3139930"/><text x="65.1747%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3,139,930 samples, 0.35%)</title><rect x="64.9247%" y="373" width="0.3479%" height="15" fill="rgb(251,153,30)" fg:x="586008480" fg:w="3139930"/><text x="65.1747%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3,139,930 samples, 0.35%)</title><rect x="64.9247%" y="357" width="0.3479%" height="15" fill="rgb(239,152,38)" fg:x="586008480" fg:w="3139930"/><text x="65.1747%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (3,146,885 samples, 0.35%)</title><rect x="65.2726%" y="421" width="0.3486%" height="15" fill="rgb(249,139,47)" fg:x="589148410" fg:w="3146885"/><text x="65.5226%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,146,885 samples, 0.35%)</title><rect x="65.2726%" y="405" width="0.3486%" height="15" fill="rgb(244,64,35)" fg:x="589148410" fg:w="3146885"/><text x="65.5226%" y="415.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3,146,885 samples, 0.35%)</title><rect x="65.2726%" y="389" width="0.3486%" height="15" fill="rgb(216,46,15)" fg:x="589148410" fg:w="3146885"/><text x="65.5226%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,146,885 samples, 0.35%)</title><rect x="65.2726%" y="373" width="0.3486%" height="15" fill="rgb(250,74,19)" fg:x="589148410" fg:w="3146885"/><text x="65.5226%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,146,885 samples, 0.35%)</title><rect x="65.2726%" y="357" width="0.3486%" height="15" fill="rgb(249,42,33)" fg:x="589148410" fg:w="3146885"/><text x="65.5226%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3,146,885 samples, 0.35%)</title><rect x="65.2726%" y="341" width="0.3486%" height="15" fill="rgb(242,149,17)" fg:x="589148410" fg:w="3146885"/><text x="65.5226%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (6,138,135 samples, 0.68%)</title><rect x="65.6212%" y="373" width="0.6801%" height="15" fill="rgb(244,29,21)" fg:x="592295295" fg:w="6138135"/><text x="65.8712%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (6,138,135 samples, 0.68%)</title><rect x="65.6212%" y="357" width="0.6801%" height="15" fill="rgb(220,130,37)" fg:x="592295295" fg:w="6138135"/><text x="65.8712%" y="367.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (6,138,135 samples, 0.68%)</title><rect x="65.6212%" y="341" width="0.6801%" height="15" fill="rgb(211,67,2)" fg:x="592295295" fg:w="6138135"/><text x="65.8712%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6,138,135 samples, 0.68%)</title><rect x="65.6212%" y="325" width="0.6801%" height="15" fill="rgb(235,68,52)" fg:x="592295295" fg:w="6138135"/><text x="65.8712%" y="335.50"></text></g><g><title>&lt;eportal_rust::cells::Cell as core::cmp::PartialEq&gt;::eq (6,138,135 samples, 0.68%)</title><rect x="65.6212%" y="309" width="0.6801%" height="15" fill="rgb(246,142,3)" fg:x="592295295" fg:w="6138135"/><text x="65.8712%" y="319.50"></text></g><g><title>eportal_rust::plant::Plant::get_plants_to_draw (15,618,788 samples, 1.73%)</title><rect x="64.9247%" y="485" width="1.7304%" height="15" fill="rgb(241,25,7)" fg:x="586008480" fg:w="15618788"/><text x="65.1747%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12,478,858 samples, 1.38%)</title><rect x="65.2726%" y="469" width="1.3825%" height="15" fill="rgb(242,119,39)" fg:x="589148410" fg:w="12478858"/><text x="65.5226%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12,478,858 samples, 1.38%)</title><rect x="65.2726%" y="453" width="1.3825%" height="15" fill="rgb(241,98,45)" fg:x="589148410" fg:w="12478858"/><text x="65.5226%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12,478,858 samples, 1.38%)</title><rect x="65.2726%" y="437" width="1.3825%" height="15" fill="rgb(254,28,30)" fg:x="589148410" fg:w="12478858"/><text x="65.5226%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9,331,973 samples, 1.03%)</title><rect x="65.6212%" y="421" width="1.0339%" height="15" fill="rgb(241,142,54)" fg:x="592295295" fg:w="9331973"/><text x="65.8712%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9,331,973 samples, 1.03%)</title><rect x="65.6212%" y="405" width="1.0339%" height="15" fill="rgb(222,85,15)" fg:x="592295295" fg:w="9331973"/><text x="65.8712%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (9,331,973 samples, 1.03%)</title><rect x="65.6212%" y="389" width="1.0339%" height="15" fill="rgb(210,85,47)" fg:x="592295295" fg:w="9331973"/><text x="65.8712%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3,193,838 samples, 0.35%)</title><rect x="66.3013%" y="373" width="0.3538%" height="15" fill="rgb(224,206,25)" fg:x="598433430" fg:w="3193838"/><text x="66.5513%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3,193,838 samples, 0.35%)</title><rect x="66.3013%" y="357" width="0.3538%" height="15" fill="rgb(243,201,19)" fg:x="598433430" fg:w="3193838"/><text x="66.5513%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,193,838 samples, 0.35%)</title><rect x="66.3013%" y="341" width="0.3538%" height="15" fill="rgb(236,59,4)" fg:x="598433430" fg:w="3193838"/><text x="66.5513%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (3,112,204 samples, 0.34%)</title><rect x="67.0307%" y="357" width="0.3448%" height="15" fill="rgb(254,179,45)" fg:x="605017703" fg:w="3112204"/><text x="67.2807%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3,112,204 samples, 0.34%)</title><rect x="67.0307%" y="341" width="0.3448%" height="15" fill="rgb(226,14,10)" fg:x="605017703" fg:w="3112204"/><text x="67.2807%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3,112,204 samples, 0.34%)</title><rect x="67.0307%" y="325" width="0.3448%" height="15" fill="rgb(244,27,41)" fg:x="605017703" fg:w="3112204"/><text x="67.2807%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,357,187 samples, 0.70%)</title><rect x="67.0307%" y="437" width="0.7043%" height="15" fill="rgb(235,35,32)" fg:x="605017703" fg:w="6357187"/><text x="67.2807%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,357,187 samples, 0.70%)</title><rect x="67.0307%" y="421" width="0.7043%" height="15" fill="rgb(218,68,31)" fg:x="605017703" fg:w="6357187"/><text x="67.2807%" y="431.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,357,187 samples, 0.70%)</title><rect x="67.0307%" y="405" width="0.7043%" height="15" fill="rgb(207,120,37)" fg:x="605017703" fg:w="6357187"/><text x="67.2807%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,357,187 samples, 0.70%)</title><rect x="67.0307%" y="389" width="0.7043%" height="15" fill="rgb(227,98,0)" fg:x="605017703" fg:w="6357187"/><text x="67.2807%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (6,357,187 samples, 0.70%)</title><rect x="67.0307%" y="373" width="0.7043%" height="15" fill="rgb(207,7,3)" fg:x="605017703" fg:w="6357187"/><text x="67.2807%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (3,244,983 samples, 0.36%)</title><rect x="67.3755%" y="357" width="0.3595%" height="15" fill="rgb(206,98,19)" fg:x="608129907" fg:w="3244983"/><text x="67.6255%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (3,244,983 samples, 0.36%)</title><rect x="67.3755%" y="341" width="0.3595%" height="15" fill="rgb(217,5,26)" fg:x="608129907" fg:w="3244983"/><text x="67.6255%" y="351.50"></text></g><g><title>glam::f32::math::std_math::sqrt (5,309,206 samples, 0.59%)</title><rect x="67.9499%" y="373" width="0.5882%" height="15" fill="rgb(235,190,38)" fg:x="613313689" fg:w="5309206"/><text x="68.1999%" y="383.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (5,309,206 samples, 0.59%)</title><rect x="67.9499%" y="357" width="0.5882%" height="15" fill="rgb(247,86,24)" fg:x="613313689" fg:w="5309206"/><text x="68.1999%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (19,430,771 samples, 2.15%)</title><rect x="66.6551%" y="469" width="2.1528%" height="15" fill="rgb(205,101,16)" fg:x="601627268" fg:w="19430771"/><text x="66.9051%" y="479.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (19,430,771 samples, 2.15%)</title><rect x="66.6551%" y="453" width="2.1528%" height="15" fill="rgb(246,168,33)" fg:x="601627268" fg:w="19430771"/><text x="66.9051%" y="463.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::any::check::_{{closure}} (9,683,149 samples, 1.07%)</title><rect x="67.7351%" y="437" width="1.0728%" height="15" fill="rgb(231,114,1)" fg:x="611374890" fg:w="9683149"/><text x="67.9851%" y="447.50"></text></g><g><title>eportal_rust::plant::Plant::randomly_spawn_plant::_{{closure}} (9,683,149 samples, 1.07%)</title><rect x="67.7351%" y="421" width="1.0728%" height="15" fill="rgb(207,184,53)" fg:x="611374890" fg:w="9683149"/><text x="67.9851%" y="431.50"></text></g><g><title>glam::f32::vec2::Vec2::distance (7,744,350 samples, 0.86%)</title><rect x="67.9499%" y="405" width="0.8580%" height="15" fill="rgb(224,95,51)" fg:x="613313689" fg:w="7744350"/><text x="68.1999%" y="415.50"></text></g><g><title>glam::f32::vec2::Vec2::length (7,744,350 samples, 0.86%)</title><rect x="67.9499%" y="389" width="0.8580%" height="15" fill="rgb(212,188,45)" fg:x="613313689" fg:w="7744350"/><text x="68.1999%" y="399.50"></text></g><g><title>glam::f32::vec2::Vec2::dot (2,435,144 samples, 0.27%)</title><rect x="68.5381%" y="373" width="0.2698%" height="15" fill="rgb(223,154,38)" fg:x="618622895" fg:w="2435144"/><text x="68.7881%" y="383.50"></text></g><g><title>eportal_rust::plant::Plant::randomly_spawn_plant (21,894,499 samples, 2.43%)</title><rect x="66.6551%" y="485" width="2.4257%" height="15" fill="rgb(251,22,52)" fg:x="601627268" fg:w="21894499"/><text x="66.9051%" y="495.50">ep..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2,463,728 samples, 0.27%)</title><rect x="68.8079%" y="469" width="0.2730%" height="15" fill="rgb(229,209,22)" fg:x="621058039" fg:w="2463728"/><text x="69.0579%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,463,728 samples, 0.27%)</title><rect x="68.8079%" y="453" width="0.2730%" height="15" fill="rgb(234,138,34)" fg:x="621058039" fg:w="2463728"/><text x="69.0579%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2,463,728 samples, 0.27%)</title><rect x="68.8079%" y="437" width="0.2730%" height="15" fill="rgb(212,95,11)" fg:x="621058039" fg:w="2463728"/><text x="69.0579%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (2,463,728 samples, 0.27%)</title><rect x="68.8079%" y="421" width="0.2730%" height="15" fill="rgb(240,179,47)" fg:x="621058039" fg:w="2463728"/><text x="69.0579%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2,463,728 samples, 0.27%)</title><rect x="68.8079%" y="405" width="0.2730%" height="15" fill="rgb(240,163,11)" fg:x="621058039" fg:w="2463728"/><text x="69.0579%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2,463,728 samples, 0.27%)</title><rect x="68.8079%" y="389" width="0.2730%" height="15" fill="rgb(236,37,12)" fg:x="621058039" fg:w="2463728"/><text x="69.0579%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,463,728 samples, 0.27%)</title><rect x="68.8079%" y="373" width="0.2730%" height="15" fill="rgb(232,164,16)" fg:x="621058039" fg:w="2463728"/><text x="69.0579%" y="383.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (2,321,604 samples, 0.26%)</title><rect x="69.0808%" y="469" width="0.2572%" height="15" fill="rgb(244,205,15)" fg:x="623521767" fg:w="2321604"/><text x="69.3308%" y="479.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (2,321,604 samples, 0.26%)</title><rect x="69.0808%" y="453" width="0.2572%" height="15" fill="rgb(223,117,47)" fg:x="623521767" fg:w="2321604"/><text x="69.3308%" y="463.50"></text></g><g><title>glam::f32::vec2::Vec2::distance (7,235,405 samples, 0.80%)</title><rect x="69.0808%" y="485" width="0.8016%" height="15" fill="rgb(244,107,35)" fg:x="623521767" fg:w="7235405"/><text x="69.3308%" y="495.50"></text></g><g><title>glam::f32::vec2::Vec2::length (4,913,801 samples, 0.54%)</title><rect x="69.3380%" y="469" width="0.5444%" height="15" fill="rgb(205,140,8)" fg:x="625843371" fg:w="4913801"/><text x="69.5880%" y="479.50"></text></g><g><title>glam::f32::math::std_math::sqrt (4,913,801 samples, 0.54%)</title><rect x="69.3380%" y="453" width="0.5444%" height="15" fill="rgb(228,84,46)" fg:x="625843371" fg:w="4913801"/><text x="69.5880%" y="463.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (4,913,801 samples, 0.54%)</title><rect x="69.3380%" y="437" width="0.5444%" height="15" fill="rgb(254,188,9)" fg:x="625843371" fg:w="4913801"/><text x="69.5880%" y="447.50"></text></g><g><title>macroquad::shapes::draw_circle_lines (3,081,489 samples, 0.34%)</title><rect x="69.8824%" y="485" width="0.3414%" height="15" fill="rgb(206,112,54)" fg:x="630757172" fg:w="3081489"/><text x="70.1324%" y="495.50"></text></g><g><title>macroquad::shapes::draw_poly_lines (3,081,489 samples, 0.34%)</title><rect x="69.8824%" y="469" width="0.3414%" height="15" fill="rgb(216,84,49)" fg:x="630757172" fg:w="3081489"/><text x="70.1324%" y="479.50"></text></g><g><title>macroquad::shapes::draw_poly_lines_from_to (3,081,489 samples, 0.34%)</title><rect x="69.8824%" y="453" width="0.3414%" height="15" fill="rgb(214,194,35)" fg:x="630757172" fg:w="3081489"/><text x="70.1324%" y="463.50"></text></g><g><title>glam::f32::vec2::Vec2::normalize (3,081,489 samples, 0.34%)</title><rect x="69.8824%" y="437" width="0.3414%" height="15" fill="rgb(249,28,3)" fg:x="630757172" fg:w="3081489"/><text x="70.1324%" y="447.50"></text></g><g><title>glam::f32::vec2::Vec2::length_recip (3,081,489 samples, 0.34%)</title><rect x="69.8824%" y="421" width="0.3414%" height="15" fill="rgb(222,56,52)" fg:x="630757172" fg:w="3081489"/><text x="70.1324%" y="431.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::recip (3,081,489 samples, 0.34%)</title><rect x="69.8824%" y="405" width="0.3414%" height="15" fill="rgb(245,217,50)" fg:x="630757172" fg:w="3081489"/><text x="70.1324%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (20,161,004 samples, 2.23%)</title><rect x="71.3006%" y="357" width="2.2337%" height="15" fill="rgb(213,201,24)" fg:x="643557668" fg:w="20161004"/><text x="71.5506%" y="367.50">h..</text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (52,676,061 samples, 5.84%)</title><rect x="71.3006%" y="373" width="5.8361%" height="15" fill="rgb(248,116,28)" fg:x="643557668" fg:w="52676061"/><text x="71.5506%" y="383.50">&lt;hashbr..</text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (32,515,057 samples, 3.60%)</title><rect x="73.5343%" y="357" width="3.6024%" height="15" fill="rgb(219,72,43)" fg:x="663718672" fg:w="32515057"/><text x="73.7843%" y="367.50">hash..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (2,818,002 samples, 0.31%)</title><rect x="77.1367%" y="373" width="0.3122%" height="15" fill="rgb(209,138,14)" fg:x="696233729" fg:w="2818002"/><text x="77.3867%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2,818,002 samples, 0.31%)</title><rect x="77.1367%" y="357" width="0.3122%" height="15" fill="rgb(222,18,33)" fg:x="696233729" fg:w="2818002"/><text x="77.3867%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2,818,002 samples, 0.31%)</title><rect x="77.1367%" y="341" width="0.3122%" height="15" fill="rgb(213,199,7)" fg:x="696233729" fg:w="2818002"/><text x="77.3867%" y="351.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (25,484,013 samples, 2.82%)</title><rect x="77.4489%" y="373" width="2.8234%" height="15" fill="rgb(250,110,10)" fg:x="699051731" fg:w="25484013"/><text x="77.6989%" y="383.50">ha..</text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (25,484,013 samples, 2.82%)</title><rect x="77.4489%" y="357" width="2.8234%" height="15" fill="rgb(248,123,6)" fg:x="699051731" fg:w="25484013"/><text x="77.6989%" y="367.50">co..</text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (91,136,227 samples, 10.10%)</title><rect x="70.5526%" y="437" width="10.0971%" height="15" fill="rgb(206,91,31)" fg:x="636805720" fg:w="91136227"/><text x="70.8026%" y="447.50">&lt;std::collectio..</text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (91,136,227 samples, 10.10%)</title><rect x="70.5526%" y="421" width="10.0971%" height="15" fill="rgb(211,154,13)" fg:x="636805720" fg:w="91136227"/><text x="70.8026%" y="431.50">&lt;hashbrown::map..</text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (91,136,227 samples, 10.10%)</title><rect x="70.5526%" y="405" width="10.0971%" height="15" fill="rgb(225,148,7)" fg:x="636805720" fg:w="91136227"/><text x="70.8026%" y="415.50">&lt;hashbrown::raw..</text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (84,384,279 samples, 9.35%)</title><rect x="71.3006%" y="389" width="9.3490%" height="15" fill="rgb(220,160,43)" fg:x="643557668" fg:w="84384279"/><text x="71.5506%" y="399.50">hashbrown::ra..</text></g><g><title>hashbrown::raw::sse2::Group::match_full (3,406,203 samples, 0.38%)</title><rect x="80.2723%" y="373" width="0.3774%" height="15" fill="rgb(213,52,39)" fg:x="724535744" fg:w="3406203"/><text x="80.5223%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (3,406,203 samples, 0.38%)</title><rect x="80.2723%" y="357" width="0.3774%" height="15" fill="rgb(243,137,7)" fg:x="724535744" fg:w="3406203"/><text x="80.5223%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3,406,203 samples, 0.38%)</title><rect x="80.2723%" y="341" width="0.3774%" height="15" fill="rgb(230,79,13)" fg:x="724535744" fg:w="3406203"/><text x="80.5223%" y="351.50"></text></g><g><title>rand::seq::IteratorRandom::choose (102,096,053 samples, 11.31%)</title><rect x="70.2238%" y="485" width="11.3114%" height="15" fill="rgb(247,105,23)" fg:x="633838661" fg:w="102096053"/><text x="70.4738%" y="495.50">rand::seq::Iterat..</text></g><g><title>core::iter::traits::iterator::Iterator::nth (99,128,994 samples, 10.98%)</title><rect x="70.5526%" y="469" width="10.9826%" height="15" fill="rgb(223,179,41)" fg:x="636805720" fg:w="99128994"/><text x="70.8026%" y="479.50">core::iter::trai..</text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (99,128,994 samples, 10.98%)</title><rect x="70.5526%" y="453" width="10.9826%" height="15" fill="rgb(218,9,34)" fg:x="636805720" fg:w="99128994"/><text x="70.8026%" y="463.50">core::iter::trai..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7,992,767 samples, 0.89%)</title><rect x="80.6497%" y="437" width="0.8855%" height="15" fill="rgb(222,106,8)" fg:x="727941947" fg:w="7992767"/><text x="80.8997%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7,992,767 samples, 0.89%)</title><rect x="80.6497%" y="421" width="0.8855%" height="15" fill="rgb(211,220,0)" fg:x="727941947" fg:w="7992767"/><text x="80.8997%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4,976,345 samples, 0.55%)</title><rect x="80.9839%" y="405" width="0.5513%" height="15" fill="rgb(229,52,16)" fg:x="730958369" fg:w="4976345"/><text x="81.2339%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3,211,576 samples, 0.36%)</title><rect x="81.8688%" y="357" width="0.3558%" height="15" fill="rgb(212,155,18)" fg:x="738945782" fg:w="3211576"/><text x="82.1188%" y="367.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (6,261,843 samples, 0.69%)</title><rect x="81.8688%" y="405" width="0.6938%" height="15" fill="rgb(242,21,14)" fg:x="738945782" fg:w="6261843"/><text x="82.1188%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6,261,843 samples, 0.69%)</title><rect x="81.8688%" y="389" width="0.6938%" height="15" fill="rgb(222,19,48)" fg:x="738945782" fg:w="6261843"/><text x="82.1188%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6,261,843 samples, 0.69%)</title><rect x="81.8688%" y="373" width="0.6938%" height="15" fill="rgb(232,45,27)" fg:x="738945782" fg:w="6261843"/><text x="82.1188%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3,050,267 samples, 0.34%)</title><rect x="82.2246%" y="357" width="0.3379%" height="15" fill="rgb(249,103,42)" fg:x="742157358" fg:w="3050267"/><text x="82.4746%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3,050,267 samples, 0.34%)</title><rect x="82.2246%" y="341" width="0.3379%" height="15" fill="rgb(246,81,33)" fg:x="742157358" fg:w="3050267"/><text x="82.4746%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (11,090,785 samples, 1.23%)</title><rect x="81.8688%" y="437" width="1.2288%" height="15" fill="rgb(252,33,42)" fg:x="738945782" fg:w="11090785"/><text x="82.1188%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11,090,785 samples, 1.23%)</title><rect x="81.8688%" y="421" width="1.2288%" height="15" fill="rgb(209,212,41)" fg:x="738945782" fg:w="11090785"/><text x="82.1188%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4,828,942 samples, 0.54%)</title><rect x="82.5626%" y="405" width="0.5350%" height="15" fill="rgb(207,154,6)" fg:x="745207625" fg:w="4828942"/><text x="82.8126%" y="415.50"></text></g><g><title>&lt;eportal_rust::cells::Cell as core::hash::Hash&gt;::hash (2,155,847 samples, 0.24%)</title><rect x="82.8587%" y="389" width="0.2388%" height="15" fill="rgb(223,64,47)" fg:x="747880720" fg:w="2155847"/><text x="83.1087%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2,155,847 samples, 0.24%)</title><rect x="82.8587%" y="373" width="0.2388%" height="15" fill="rgb(211,161,38)" fg:x="747880720" fg:w="2155847"/><text x="83.1087%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (2,155,847 samples, 0.24%)</title><rect x="82.8587%" y="357" width="0.2388%" height="15" fill="rgb(219,138,40)" fg:x="747880720" fg:w="2155847"/><text x="83.1087%" y="367.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,155,847 samples, 0.24%)</title><rect x="82.8587%" y="341" width="0.2388%" height="15" fill="rgb(241,228,46)" fg:x="747880720" fg:w="2155847"/><text x="83.1087%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,155,847 samples, 0.24%)</title><rect x="82.8587%" y="325" width="0.2388%" height="15" fill="rgb(223,209,38)" fg:x="747880720" fg:w="2155847"/><text x="83.1087%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,155,847 samples, 0.24%)</title><rect x="82.8587%" y="309" width="0.2388%" height="15" fill="rgb(236,164,45)" fg:x="747880720" fg:w="2155847"/><text x="83.1087%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2,155,847 samples, 0.24%)</title><rect x="82.8587%" y="293" width="0.2388%" height="15" fill="rgb(231,15,5)" fg:x="747880720" fg:w="2155847"/><text x="83.1087%" y="303.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (30,570,307 samples, 3.39%)</title><rect x="83.4495%" y="373" width="3.3869%" height="15" fill="rgb(252,35,15)" fg:x="753213240" fg:w="30570307"/><text x="83.6995%" y="383.50">has..</text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (30,570,307 samples, 3.39%)</title><rect x="83.4495%" y="357" width="3.3869%" height="15" fill="rgb(248,181,18)" fg:x="753213240" fg:w="30570307"/><text x="83.6995%" y="367.50">&lt;Q ..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (30,570,307 samples, 3.39%)</title><rect x="83.4495%" y="341" width="3.3869%" height="15" fill="rgb(233,39,42)" fg:x="753213240" fg:w="30570307"/><text x="83.6995%" y="351.50">cor..</text></g><g><title>&lt;eportal_rust::cells::Cell as core::cmp::PartialEq&gt;::eq (30,570,307 samples, 3.39%)</title><rect x="83.4495%" y="325" width="3.3869%" height="15" fill="rgb(238,110,33)" fg:x="753213240" fg:w="30570307"/><text x="83.6995%" y="335.50">&lt;ep..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (32,199,101 samples, 3.57%)</title><rect x="83.4495%" y="389" width="3.5674%" height="15" fill="rgb(233,195,10)" fg:x="753213240" fg:w="32199101"/><text x="83.6995%" y="399.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1,628,794 samples, 0.18%)</title><rect x="86.8364%" y="373" width="0.1805%" height="15" fill="rgb(254,105,3)" fg:x="783783547" fg:w="1628794"/><text x="87.0864%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1,628,794 samples, 0.18%)</title><rect x="86.8364%" y="357" width="0.1805%" height="15" fill="rgb(221,225,9)" fg:x="783783547" fg:w="1628794"/><text x="87.0864%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1,628,794 samples, 0.18%)</title><rect x="86.8364%" y="341" width="0.1805%" height="15" fill="rgb(224,227,45)" fg:x="783783547" fg:w="1628794"/><text x="87.0864%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1,628,794 samples, 0.18%)</title><rect x="86.8364%" y="325" width="0.1805%" height="15" fill="rgb(229,198,43)" fg:x="783783547" fg:w="1628794"/><text x="87.0864%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (5,069,207 samples, 0.56%)</title><rect x="87.0169%" y="389" width="0.5616%" height="15" fill="rgb(206,209,35)" fg:x="785412341" fg:w="5069207"/><text x="87.2669%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (59,987,198 samples, 6.65%)</title><rect x="81.5352%" y="485" width="6.6461%" height="15" fill="rgb(245,195,53)" fg:x="735934714" fg:w="59987198"/><text x="81.7852%" y="495.50">std::coll..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (59,987,198 samples, 6.65%)</title><rect x="81.5352%" y="469" width="6.6461%" height="15" fill="rgb(240,92,26)" fg:x="735934714" fg:w="59987198"/><text x="81.7852%" y="479.50">hashbrown..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (59,987,198 samples, 6.65%)</title><rect x="81.5352%" y="453" width="6.6461%" height="15" fill="rgb(207,40,23)" fg:x="735934714" fg:w="59987198"/><text x="81.7852%" y="463.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (45,885,345 samples, 5.08%)</title><rect x="83.0976%" y="437" width="5.0837%" height="15" fill="rgb(223,111,35)" fg:x="750036567" fg:w="45885345"/><text x="83.3476%" y="447.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (45,885,345 samples, 5.08%)</title><rect x="83.0976%" y="421" width="5.0837%" height="15" fill="rgb(229,147,28)" fg:x="750036567" fg:w="45885345"/><text x="83.3476%" y="431.50">hashbr..</text></g><g><title>hashbrown::raw::RawTableInner::find_inner (45,885,345 samples, 5.08%)</title><rect x="83.0976%" y="405" width="5.0837%" height="15" fill="rgb(211,29,28)" fg:x="750036567" fg:w="45885345"/><text x="83.3476%" y="415.50">hashbr..</text></g><g><title>hashbrown::raw::sse2::Group::load (5,440,364 samples, 0.60%)</title><rect x="87.5785%" y="389" width="0.6027%" height="15" fill="rgb(228,72,33)" fg:x="790481548" fg:w="5440364"/><text x="87.8285%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5,440,364 samples, 0.60%)</title><rect x="87.5785%" y="373" width="0.6027%" height="15" fill="rgb(205,214,31)" fg:x="790481548" fg:w="5440364"/><text x="87.8285%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5,440,364 samples, 0.60%)</title><rect x="87.5785%" y="357" width="0.6027%" height="15" fill="rgb(224,111,15)" fg:x="790481548" fg:w="5440364"/><text x="87.8285%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2,465,551 samples, 0.27%)</title><rect x="88.1813%" y="485" width="0.2732%" height="15" fill="rgb(253,21,26)" fg:x="795921912" fg:w="2465551"/><text x="88.4313%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (2,465,551 samples, 0.27%)</title><rect x="88.1813%" y="469" width="0.2732%" height="15" fill="rgb(245,139,43)" fg:x="795921912" fg:w="2465551"/><text x="88.4313%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (2,465,551 samples, 0.27%)</title><rect x="88.1813%" y="453" width="0.2732%" height="15" fill="rgb(252,170,7)" fg:x="795921912" fg:w="2465551"/><text x="88.4313%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2,465,551 samples, 0.27%)</title><rect x="88.1813%" y="437" width="0.2732%" height="15" fill="rgb(231,118,14)" fg:x="795921912" fg:w="2465551"/><text x="88.4313%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,465,551 samples, 0.27%)</title><rect x="88.1813%" y="421" width="0.2732%" height="15" fill="rgb(238,83,0)" fg:x="795921912" fg:w="2465551"/><text x="88.4313%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,465,551 samples, 0.27%)</title><rect x="88.1813%" y="405" width="0.2732%" height="15" fill="rgb(221,39,39)" fg:x="795921912" fg:w="2465551"/><text x="88.4313%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (2,465,551 samples, 0.27%)</title><rect x="88.1813%" y="389" width="0.2732%" height="15" fill="rgb(222,119,46)" fg:x="795921912" fg:w="2465551"/><text x="88.4313%" y="399.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (2,465,551 samples, 0.27%)</title><rect x="88.1813%" y="373" width="0.2732%" height="15" fill="rgb(222,165,49)" fg:x="795921912" fg:w="2465551"/><text x="88.4313%" y="383.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2,465,551 samples, 0.27%)</title><rect x="88.1813%" y="357" width="0.2732%" height="15" fill="rgb(219,113,52)" fg:x="795921912" fg:w="2465551"/><text x="88.4313%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2,465,551 samples, 0.27%)</title><rect x="88.1813%" y="341" width="0.2732%" height="15" fill="rgb(214,7,15)" fg:x="795921912" fg:w="2465551"/><text x="88.4313%" y="351.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialEq&gt;::eq (2,465,551 samples, 0.27%)</title><rect x="88.1813%" y="325" width="0.2732%" height="15" fill="rgb(235,32,4)" fg:x="795921912" fg:w="2465551"/><text x="88.4313%" y="335.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Instant as core::cmp::PartialEq&gt;::eq (2,465,551 samples, 0.27%)</title><rect x="88.1813%" y="309" width="0.2732%" height="15" fill="rgb(238,90,54)" fg:x="795921912" fg:w="2465551"/><text x="88.4313%" y="319.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::cmp::PartialEq&gt;::eq (2,465,551 samples, 0.27%)</title><rect x="88.1813%" y="293" width="0.2732%" height="15" fill="rgb(213,208,19)" fg:x="795921912" fg:w="2465551"/><text x="88.4313%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (1,846,076 samples, 0.20%)</title><rect x="89.1653%" y="421" width="0.2045%" height="15" fill="rgb(233,156,4)" fg:x="804803909" fg:w="1846076"/><text x="89.4153%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,846,076 samples, 0.20%)</title><rect x="89.1653%" y="405" width="0.2045%" height="15" fill="rgb(207,194,5)" fg:x="804803909" fg:w="1846076"/><text x="89.4153%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (16,923,843 samples, 1.88%)</title><rect x="88.4544%" y="485" width="1.8750%" height="15" fill="rgb(206,111,30)" fg:x="798387463" fg:w="16923843"/><text x="88.7044%" y="495.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16,923,843 samples, 1.88%)</title><rect x="88.4544%" y="469" width="1.8750%" height="15" fill="rgb(243,70,54)" fg:x="798387463" fg:w="16923843"/><text x="88.7044%" y="479.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (10,507,397 samples, 1.16%)</title><rect x="89.1653%" y="453" width="1.1641%" height="15" fill="rgb(242,28,8)" fg:x="804803909" fg:w="10507397"/><text x="89.4153%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (10,507,397 samples, 1.16%)</title><rect x="89.1653%" y="437" width="1.1641%" height="15" fill="rgb(219,106,18)" fg:x="804803909" fg:w="10507397"/><text x="89.4153%" y="447.50"></text></g><g><title>hashbrown::raw::h2 (8,661,321 samples, 0.96%)</title><rect x="89.3699%" y="421" width="0.9596%" height="15" fill="rgb(244,222,10)" fg:x="806649985" fg:w="8661321"/><text x="89.6199%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::with_capacity (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="485" width="0.5598%" height="15" fill="rgb(236,179,52)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="469" width="0.5598%" height="15" fill="rgb(213,23,39)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="453" width="0.5598%" height="15" fill="rgb(238,48,10)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="437" width="0.5598%" height="15" fill="rgb(251,196,23)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="421" width="0.5598%" height="15" fill="rgb(250,152,24)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::with_capacity (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="405" width="0.5598%" height="15" fill="rgb(209,150,17)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="389" width="0.5598%" height="15" fill="rgb(234,202,34)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="373" width="0.5598%" height="15" fill="rgb(253,148,53)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="383.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="357" width="0.5598%" height="15" fill="rgb(218,129,16)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="341" width="0.5598%" height="15" fill="rgb(216,85,19)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="325" width="0.5598%" height="15" fill="rgb(235,228,7)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="335.50"></text></g><g><title>alloc::alloc::alloc (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="309" width="0.5598%" height="15" fill="rgb(245,175,0)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="319.50"></text></g><g><title>__rdl_alloc (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="293" width="0.5598%" height="15" fill="rgb(208,168,36)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="303.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="277" width="0.5598%" height="15" fill="rgb(246,171,24)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="287.50"></text></g><g><title>malloc (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="261" width="0.5598%" height="15" fill="rgb(215,142,24)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="271.50"></text></g><g><title>[libc.so.6] (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="245" width="0.5598%" height="15" fill="rgb(250,187,7)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="255.50"></text></g><g><title>[libc.so.6] (5,053,129 samples, 0.56%)</title><rect x="90.3294%" y="229" width="0.5598%" height="15" fill="rgb(228,66,33)" fg:x="815311306" fg:w="5053129"/><text x="90.5794%" y="239.50"></text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::maybe_unwind (781,142,228 samples, 86.54%)</title><rect x="4.7422%" y="549" width="86.5438%" height="15" fill="rgb(234,215,21)" fg:x="42802560" fg:w="781142228"/><text x="4.9922%" y="559.50">&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::maybe_unwind</text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::_{{closure}} (781,142,228 samples, 86.54%)</title><rect x="4.7422%" y="533" width="86.5438%" height="15" fill="rgb(222,191,20)" fg:x="42802560" fg:w="781142228"/><text x="4.9922%" y="543.50">&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::_{{closure}}</text></g><g><title>macroquad::exec::resume (781,142,228 samples, 86.54%)</title><rect x="4.7422%" y="517" width="86.5438%" height="15" fill="rgb(245,79,54)" fg:x="42802560" fg:w="781142228"/><text x="4.9922%" y="527.50">macroquad::exec::resume</text></g><g><title>eportal_rust::amain::_{{closure}} (781,142,228 samples, 86.54%)</title><rect x="4.7422%" y="501" width="86.5438%" height="15" fill="rgb(240,10,37)" fg:x="42802560" fg:w="781142228"/><text x="4.9922%" y="511.50">eportal_rust::amain::_{{closure}}</text></g><g><title>std::time::Instant::elapsed (3,580,353 samples, 0.40%)</title><rect x="90.8893%" y="485" width="0.3967%" height="15" fill="rgb(214,192,32)" fg:x="820364435" fg:w="3580353"/><text x="91.1393%" y="495.50"></text></g><g><title>std::time::Instant::now (3,580,353 samples, 0.40%)</title><rect x="90.8893%" y="469" width="0.3967%" height="15" fill="rgb(209,36,54)" fg:x="820364435" fg:w="3580353"/><text x="91.1393%" y="479.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (3,580,353 samples, 0.40%)</title><rect x="90.8893%" y="453" width="0.3967%" height="15" fill="rgb(220,10,11)" fg:x="820364435" fg:w="3580353"/><text x="91.1393%" y="463.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (3,580,353 samples, 0.40%)</title><rect x="90.8893%" y="437" width="0.3967%" height="15" fill="rgb(221,106,17)" fg:x="820364435" fg:w="3580353"/><text x="91.1393%" y="447.50"></text></g><g><title>clock_gettime (3,580,353 samples, 0.40%)</title><rect x="90.8893%" y="421" width="0.3967%" height="15" fill="rgb(251,142,44)" fg:x="820364435" fg:w="3580353"/><text x="91.1393%" y="431.50"></text></g><g><title>__vdso_clock_gettime (3,580,353 samples, 0.40%)</title><rect x="90.8893%" y="405" width="0.3967%" height="15" fill="rgb(238,13,15)" fg:x="820364435" fg:w="3580353"/><text x="91.1393%" y="415.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::apply_bindings_from_slice (3,245,270 samples, 0.36%)</title><rect x="91.2860%" y="453" width="0.3595%" height="15" fill="rgb(208,107,27)" fg:x="823944788" fg:w="3245270"/><text x="91.5360%" y="463.50"></text></g><g><title>[iris_dri.so] (2,551,262 samples, 0.28%)</title><rect x="91.6455%" y="405" width="0.2827%" height="15" fill="rgb(205,136,37)" fg:x="827190058" fg:w="2551262"/><text x="91.8955%" y="415.50"></text></g><g><title>[iris_dri.so] (2,551,262 samples, 0.28%)</title><rect x="91.6455%" y="389" width="0.2827%" height="15" fill="rgb(250,205,27)" fg:x="827190058" fg:w="2551262"/><text x="91.8955%" y="399.50"></text></g><g><title>[iris_dri.so] (2,551,262 samples, 0.28%)</title><rect x="91.6455%" y="373" width="0.2827%" height="15" fill="rgb(210,80,43)" fg:x="827190058" fg:w="2551262"/><text x="91.8955%" y="383.50"></text></g><g><title>macroquad::experimental::scene::update (12,002,233 samples, 1.33%)</title><rect x="91.2860%" y="533" width="1.3297%" height="15" fill="rgb(247,160,36)" fg:x="823944788" fg:w="12002233"/><text x="91.5360%" y="543.50"></text></g><g><title>macroquad::experimental::scene::Scene::update (12,002,233 samples, 1.33%)</title><rect x="91.2860%" y="517" width="1.3297%" height="15" fill="rgb(234,13,49)" fg:x="823944788" fg:w="12002233"/><text x="91.5360%" y="527.50"></text></g><g><title>macroquad::camera::set_camera (12,002,233 samples, 1.33%)</title><rect x="91.2860%" y="501" width="1.3297%" height="15" fill="rgb(234,122,0)" fg:x="823944788" fg:w="12002233"/><text x="91.5360%" y="511.50"></text></g><g><title>macroquad::Context::perform_render_passes (12,002,233 samples, 1.33%)</title><rect x="91.2860%" y="485" width="1.3297%" height="15" fill="rgb(207,146,38)" fg:x="823944788" fg:w="12002233"/><text x="91.5360%" y="495.50"></text></g><g><title>macroquad::quad_gl::QuadGl::draw (12,002,233 samples, 1.33%)</title><rect x="91.2860%" y="469" width="1.3297%" height="15" fill="rgb(207,177,25)" fg:x="823944788" fg:w="12002233"/><text x="91.5360%" y="479.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::buffer_update (8,756,963 samples, 0.97%)</title><rect x="91.6455%" y="453" width="0.9702%" height="15" fill="rgb(211,178,42)" fg:x="827190058" fg:w="8756963"/><text x="91.8955%" y="463.50"></text></g><g><title>miniquad::native::gl::glBufferSubData (8,756,963 samples, 0.97%)</title><rect x="91.6455%" y="437" width="0.9702%" height="15" fill="rgb(230,69,54)" fg:x="827190058" fg:w="8756963"/><text x="91.8955%" y="447.50"></text></g><g><title>[iris_dri.so] (8,756,963 samples, 0.97%)</title><rect x="91.6455%" y="421" width="0.9702%" height="15" fill="rgb(214,135,41)" fg:x="827190058" fg:w="8756963"/><text x="91.8955%" y="431.50"></text></g><g><title>[libc.so.6] (6,205,701 samples, 0.69%)</title><rect x="91.9282%" y="405" width="0.6875%" height="15" fill="rgb(237,67,25)" fg:x="829741320" fg:w="6205701"/><text x="92.1782%" y="415.50"></text></g><g><title>macroquad::Context::end_frame (15,247,144 samples, 1.69%)</title><rect x="91.2860%" y="549" width="1.6893%" height="15" fill="rgb(222,189,50)" fg:x="823944788" fg:w="15247144"/><text x="91.5360%" y="559.50"></text></g><g><title>macroquad::ui::ui_context::UiContext::draw (3,244,911 samples, 0.36%)</title><rect x="92.6157%" y="533" width="0.3595%" height="15" fill="rgb(245,148,34)" fg:x="835947021" fg:w="3244911"/><text x="92.8657%" y="543.50"></text></g><g><title>macroquad::quad_gl::QuadGl::texture (3,244,911 samples, 0.36%)</title><rect x="92.6157%" y="517" width="0.3595%" height="15" fill="rgb(222,29,6)" fg:x="835947021" fg:w="3244911"/><text x="92.8657%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,244,911 samples, 0.36%)</title><rect x="92.6157%" y="501" width="0.3595%" height="15" fill="rgb(221,189,43)" fg:x="835947021" fg:w="3244911"/><text x="92.8657%" y="511.50"></text></g><g><title>macroquad::quad_gl::QuadGl::texture::_{{closure}} (3,244,911 samples, 0.36%)</title><rect x="92.6157%" y="485" width="0.3595%" height="15" fill="rgb(207,36,27)" fg:x="835947021" fg:w="3244911"/><text x="92.8657%" y="495.50"></text></g><g><title>macroquad::Context::raw_miniquad_id (3,244,911 samples, 0.36%)</title><rect x="92.6157%" y="469" width="0.3595%" height="15" fill="rgb(217,90,24)" fg:x="835947021" fg:w="3244911"/><text x="92.8657%" y="479.50"></text></g><g><title>miniquad::native::gl::glFinish (1,250,242 samples, 0.14%)</title><rect x="92.9752%" y="549" width="0.1385%" height="15" fill="rgb(224,66,35)" fg:x="839191932" fg:w="1250242"/><text x="93.2252%" y="559.50"></text></g><g><title>[iris_dri.so] (1,250,242 samples, 0.14%)</title><rect x="92.9752%" y="533" width="0.1385%" height="15" fill="rgb(221,13,50)" fg:x="839191932" fg:w="1250242"/><text x="93.2252%" y="543.50"></text></g><g><title>[iris_dri.so] (1,250,242 samples, 0.14%)</title><rect x="92.9752%" y="517" width="0.1385%" height="15" fill="rgb(236,68,49)" fg:x="839191932" fg:w="1250242"/><text x="93.2252%" y="527.50"></text></g><g><title>[iris_dri.so] (1,250,242 samples, 0.14%)</title><rect x="92.9752%" y="501" width="0.1385%" height="15" fill="rgb(229,146,28)" fg:x="839191932" fg:w="1250242"/><text x="93.2252%" y="511.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1,250,242 samples, 0.14%)</title><rect x="92.9752%" y="485" width="0.1385%" height="15" fill="rgb(225,31,38)" fg:x="839191932" fg:w="1250242"/><text x="93.2252%" y="495.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1,250,242 samples, 0.14%)</title><rect x="92.9752%" y="469" width="0.1385%" height="15" fill="rgb(250,208,3)" fg:x="839191932" fg:w="1250242"/><text x="93.2252%" y="479.50"></text></g><g><title>xcb_wait_for_special_event (1,250,242 samples, 0.14%)</title><rect x="92.9752%" y="453" width="0.1385%" height="15" fill="rgb(246,54,23)" fg:x="839191932" fg:w="1250242"/><text x="93.2252%" y="463.50"></text></g><g><title>[libxcb.so.1.1.0] (1,250,242 samples, 0.14%)</title><rect x="92.9752%" y="437" width="0.1385%" height="15" fill="rgb(243,76,11)" fg:x="839191932" fg:w="1250242"/><text x="93.2252%" y="447.50"></text></g><g><title>__poll (1,219,499 samples, 0.14%)</title><rect x="92.9786%" y="421" width="0.1351%" height="15" fill="rgb(245,21,50)" fg:x="839222675" fg:w="1219499"/><text x="93.2286%" y="431.50"></text></g><g><title>[libc.so.6] (1,219,498 samples, 0.14%)</title><rect x="92.9786%" y="405" width="0.1351%" height="15" fill="rgb(228,9,43)" fg:x="839222676" fg:w="1219498"/><text x="93.2286%" y="415.50"></text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw (812,674,289 samples, 90.04%)</title><rect x="4.7422%" y="565" width="90.0373%" height="15" fill="rgb(208,100,47)" fg:x="42802560" fg:w="812674289"/><text x="4.9922%" y="575.50">&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw</text></g><g><title>miniquad::native::gl::glFlush (15,034,675 samples, 1.67%)</title><rect x="93.1137%" y="549" width="1.6657%" height="15" fill="rgb(232,26,8)" fg:x="840442174" fg:w="15034675"/><text x="93.3637%" y="559.50"></text></g><g><title>[iris_dri.so] (15,034,675 samples, 1.67%)</title><rect x="93.1137%" y="533" width="1.6657%" height="15" fill="rgb(216,166,38)" fg:x="840442174" fg:w="15034675"/><text x="93.3637%" y="543.50"></text></g><g><title>[iris_dri.so] (15,034,675 samples, 1.67%)</title><rect x="93.1137%" y="517" width="1.6657%" height="15" fill="rgb(251,202,51)" fg:x="840442174" fg:w="15034675"/><text x="93.3637%" y="527.50"></text></g><g><title>[iris_dri.so] (15,034,675 samples, 1.67%)</title><rect x="93.1137%" y="501" width="1.6657%" height="15" fill="rgb(254,216,34)" fg:x="840442174" fg:w="15034675"/><text x="93.3637%" y="511.50"></text></g><g><title>[iris_dri.so] (15,034,675 samples, 1.67%)</title><rect x="93.1137%" y="485" width="1.6657%" height="15" fill="rgb(251,32,27)" fg:x="840442174" fg:w="15034675"/><text x="93.3637%" y="495.50"></text></g><g><title>[iris_dri.so] (15,034,675 samples, 1.67%)</title><rect x="93.1137%" y="469" width="1.6657%" height="15" fill="rgb(208,127,28)" fg:x="840442174" fg:w="15034675"/><text x="93.3637%" y="479.50"></text></g><g><title>[iris_dri.so] (15,034,675 samples, 1.67%)</title><rect x="93.1137%" y="453" width="1.6657%" height="15" fill="rgb(224,137,22)" fg:x="840442174" fg:w="15034675"/><text x="93.3637%" y="463.50"></text></g><g><title>[iris_dri.so] (15,034,675 samples, 1.67%)</title><rect x="93.1137%" y="437" width="1.6657%" height="15" fill="rgb(254,70,32)" fg:x="840442174" fg:w="15034675"/><text x="93.3637%" y="447.50"></text></g><g><title>[iris_dri.so] (12,298,170 samples, 1.36%)</title><rect x="93.4169%" y="421" width="1.3625%" height="15" fill="rgb(229,75,37)" fg:x="843178679" fg:w="12298170"/><text x="93.6669%" y="431.50"></text></g><g><title>[iris_dri.so] (12,298,170 samples, 1.36%)</title><rect x="93.4169%" y="405" width="1.3625%" height="15" fill="rgb(252,64,23)" fg:x="843178679" fg:w="12298170"/><text x="93.6669%" y="415.50"></text></g><g><title>[iris_dri.so] (8,832,151 samples, 0.98%)</title><rect x="93.8009%" y="389" width="0.9785%" height="15" fill="rgb(232,162,48)" fg:x="846644698" fg:w="8832151"/><text x="94.0509%" y="399.50"></text></g><g><title>[iris_dri.so] (8,832,151 samples, 0.98%)</title><rect x="93.8009%" y="373" width="0.9785%" height="15" fill="rgb(246,160,12)" fg:x="846644698" fg:w="8832151"/><text x="94.0509%" y="383.50"></text></g><g><title>[iris_dri.so] (5,827,244 samples, 0.65%)</title><rect x="94.1338%" y="357" width="0.6456%" height="15" fill="rgb(247,166,0)" fg:x="849649605" fg:w="5827244"/><text x="94.3838%" y="367.50"></text></g><g><title>[iris_dri.so] (5,827,244 samples, 0.65%)</title><rect x="94.1338%" y="341" width="0.6456%" height="15" fill="rgb(249,219,21)" fg:x="849649605" fg:w="5827244"/><text x="94.3838%" y="351.50"></text></g><g><title>[iris_dri.so] (3,087,555 samples, 0.34%)</title><rect x="94.4374%" y="325" width="0.3421%" height="15" fill="rgb(205,209,3)" fg:x="852389294" fg:w="3087555"/><text x="94.6874%" y="335.50"></text></g><g><title>[iris_dri.so] (3,087,555 samples, 0.34%)</title><rect x="94.4374%" y="309" width="0.3421%" height="15" fill="rgb(243,44,1)" fg:x="852389294" fg:w="3087555"/><text x="94.6874%" y="319.50"></text></g><g><title>[iris_dri.so] (3,087,555 samples, 0.34%)</title><rect x="94.4374%" y="293" width="0.3421%" height="15" fill="rgb(206,159,16)" fg:x="852389294" fg:w="3087555"/><text x="94.6874%" y="303.50"></text></g><g><title>[iris_dri.so] (3,087,555 samples, 0.34%)</title><rect x="94.4374%" y="277" width="0.3421%" height="15" fill="rgb(244,77,30)" fg:x="852389294" fg:w="3087555"/><text x="94.6874%" y="287.50"></text></g><g><title>XCloseDisplay (3,113,577 samples, 0.34%)</title><rect x="94.7794%" y="565" width="0.3450%" height="15" fill="rgb(218,69,12)" fg:x="855476849" fg:w="3113577"/><text x="95.0294%" y="575.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (3,113,577 samples, 0.34%)</title><rect x="94.7794%" y="549" width="0.3450%" height="15" fill="rgb(212,87,7)" fg:x="855476849" fg:w="3113577"/><text x="95.0294%" y="559.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (3,113,577 samples, 0.34%)</title><rect x="94.7794%" y="533" width="0.3450%" height="15" fill="rgb(245,114,25)" fg:x="855476849" fg:w="3113577"/><text x="95.0294%" y="543.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (3,113,577 samples, 0.34%)</title><rect x="94.7794%" y="517" width="0.3450%" height="15" fill="rgb(210,61,42)" fg:x="855476849" fg:w="3113577"/><text x="95.0294%" y="527.50"></text></g><g><title>[iris_dri.so] (3,113,577 samples, 0.34%)</title><rect x="94.7794%" y="501" width="0.3450%" height="15" fill="rgb(211,52,33)" fg:x="855476849" fg:w="3113577"/><text x="95.0294%" y="511.50"></text></g><g><title>[iris_dri.so] (3,113,577 samples, 0.34%)</title><rect x="94.7794%" y="485" width="0.3450%" height="15" fill="rgb(234,58,33)" fg:x="855476849" fg:w="3113577"/><text x="95.0294%" y="495.50"></text></g><g><title>[iris_dri.so] (3,113,577 samples, 0.34%)</title><rect x="94.7794%" y="469" width="0.3450%" height="15" fill="rgb(220,115,36)" fg:x="855476849" fg:w="3113577"/><text x="95.0294%" y="479.50"></text></g><g><title>[iris_dri.so] (3,113,577 samples, 0.34%)</title><rect x="94.7794%" y="453" width="0.3450%" height="15" fill="rgb(243,153,54)" fg:x="855476849" fg:w="3113577"/><text x="95.0294%" y="463.50"></text></g><g><title>[iris_dri.so] (3,113,577 samples, 0.34%)</title><rect x="94.7794%" y="437" width="0.3450%" height="15" fill="rgb(251,47,18)" fg:x="855476849" fg:w="3113577"/><text x="95.0294%" y="447.50"></text></g><g><title>cfree (3,113,577 samples, 0.34%)</title><rect x="94.7794%" y="421" width="0.3450%" height="15" fill="rgb(242,102,42)" fg:x="855476849" fg:w="3113577"/><text x="95.0294%" y="431.50"></text></g><g><title>[libc.so.6] (3,113,577 samples, 0.34%)</title><rect x="94.7794%" y="405" width="0.3450%" height="15" fill="rgb(234,31,38)" fg:x="855476849" fg:w="3113577"/><text x="95.0294%" y="415.50"></text></g><g><title>miniquad::native::linux_x11::glx::Glx::create_context (5,717,427 samples, 0.63%)</title><rect x="95.1244%" y="565" width="0.6334%" height="15" fill="rgb(221,117,51)" fg:x="858590426" fg:w="5717427"/><text x="95.3744%" y="575.50"></text></g><g><title>[libGLX.so.0.0.0] (5,717,427 samples, 0.63%)</title><rect x="95.1244%" y="549" width="0.6334%" height="15" fill="rgb(212,20,18)" fg:x="858590426" fg:w="5717427"/><text x="95.3744%" y="559.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (5,717,427 samples, 0.63%)</title><rect x="95.1244%" y="533" width="0.6334%" height="15" fill="rgb(245,133,36)" fg:x="858590426" fg:w="5717427"/><text x="95.3744%" y="543.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (5,717,427 samples, 0.63%)</title><rect x="95.1244%" y="517" width="0.6334%" height="15" fill="rgb(212,6,19)" fg:x="858590426" fg:w="5717427"/><text x="95.3744%" y="527.50"></text></g><g><title>[iris_dri.so] (5,717,427 samples, 0.63%)</title><rect x="95.1244%" y="501" width="0.6334%" height="15" fill="rgb(218,1,36)" fg:x="858590426" fg:w="5717427"/><text x="95.3744%" y="511.50"></text></g><g><title>[iris_dri.so] (5,717,427 samples, 0.63%)</title><rect x="95.1244%" y="485" width="0.6334%" height="15" fill="rgb(246,84,54)" fg:x="858590426" fg:w="5717427"/><text x="95.3744%" y="495.50"></text></g><g><title>[iris_dri.so] (5,717,427 samples, 0.63%)</title><rect x="95.1244%" y="469" width="0.6334%" height="15" fill="rgb(242,110,6)" fg:x="858590426" fg:w="5717427"/><text x="95.3744%" y="479.50"></text></g><g><title>[iris_dri.so] (5,717,427 samples, 0.63%)</title><rect x="95.1244%" y="453" width="0.6334%" height="15" fill="rgb(214,47,5)" fg:x="858590426" fg:w="5717427"/><text x="95.3744%" y="463.50"></text></g><g><title>pthread_once (5,717,427 samples, 0.63%)</title><rect x="95.1244%" y="437" width="0.6334%" height="15" fill="rgb(218,159,25)" fg:x="858590426" fg:w="5717427"/><text x="95.3744%" y="447.50"></text></g><g><title>[libc.so.6] (5,717,427 samples, 0.63%)</title><rect x="95.1244%" y="421" width="0.6334%" height="15" fill="rgb(215,211,28)" fg:x="858590426" fg:w="5717427"/><text x="95.3744%" y="431.50"></text></g><g><title>[iris_dri.so] (5,717,427 samples, 0.63%)</title><rect x="95.1244%" y="405" width="0.6334%" height="15" fill="rgb(238,59,32)" fg:x="858590426" fg:w="5717427"/><text x="95.3744%" y="415.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (4,137,286 samples, 0.46%)</title><rect x="95.8108%" y="437" width="0.4584%" height="15" fill="rgb(226,82,3)" fg:x="864785977" fg:w="4137286"/><text x="96.0608%" y="447.50"></text></g><g><title>XML_ParseBuffer (4,137,286 samples, 0.46%)</title><rect x="95.8108%" y="421" width="0.4584%" height="15" fill="rgb(240,164,32)" fg:x="864785977" fg:w="4137286"/><text x="96.0608%" y="431.50"></text></g><g><title>[libexpat.so.1.9.2] (4,137,286 samples, 0.46%)</title><rect x="95.8108%" y="405" width="0.4584%" height="15" fill="rgb(232,46,7)" fg:x="864785977" fg:w="4137286"/><text x="96.0608%" y="415.50"></text></g><g><title>[libexpat.so.1.9.2] (2,367,536 samples, 0.26%)</title><rect x="96.0069%" y="389" width="0.2623%" height="15" fill="rgb(229,129,53)" fg:x="866555727" fg:w="2367536"/><text x="96.2569%" y="399.50"></text></g><g><title>[libexpat.so.1.9.2] (2,367,536 samples, 0.26%)</title><rect x="96.0069%" y="373" width="0.2623%" height="15" fill="rgb(234,188,29)" fg:x="866555727" fg:w="2367536"/><text x="96.2569%" y="383.50"></text></g><g><title>[libexpat.so.1.9.2] (1,523,651 samples, 0.17%)</title><rect x="96.1004%" y="357" width="0.1688%" height="15" fill="rgb(246,141,4)" fg:x="867399612" fg:w="1523651"/><text x="96.3504%" y="367.50"></text></g><g><title>[libexpat.so.1.9.2] (1,031,207 samples, 0.11%)</title><rect x="96.1549%" y="341" width="0.1142%" height="15" fill="rgb(229,23,39)" fg:x="867892056" fg:w="1031207"/><text x="96.4049%" y="351.50"></text></g><g><title>[libexpat.so.1.9.2] (312,581 samples, 0.03%)</title><rect x="96.2346%" y="325" width="0.0346%" height="15" fill="rgb(206,12,3)" fg:x="868610682" fg:w="312581"/><text x="96.4846%" y="335.50"></text></g><g><title>[libexpat.so.1.9.2] (312,581 samples, 0.03%)</title><rect x="96.2346%" y="309" width="0.0346%" height="15" fill="rgb(252,226,20)" fg:x="868610682" fg:w="312581"/><text x="96.4846%" y="319.50"></text></g><g><title>[libc.so.6] (312,581 samples, 0.03%)</title><rect x="96.2346%" y="293" width="0.0346%" height="15" fill="rgb(216,123,35)" fg:x="868610682" fg:w="312581"/><text x="96.4846%" y="303.50"></text></g><g><title>[ld-linux-x86-64.so.2] (18,626,885 samples, 2.06%)</title><rect x="96.6973%" y="261" width="2.0637%" height="15" fill="rgb(212,68,40)" fg:x="872787479" fg:w="18626885"/><text x="96.9473%" y="271.50">[..</text></g><g><title>[ld-linux-x86-64.so.2] (11,743,465 samples, 1.30%)</title><rect x="97.4599%" y="245" width="1.3011%" height="15" fill="rgb(254,125,32)" fg:x="879670899" fg:w="11743465"/><text x="97.7099%" y="255.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,198,005 samples, 0.24%)</title><rect x="98.5175%" y="229" width="0.2435%" height="15" fill="rgb(253,97,22)" fg:x="889216359" fg:w="2198005"/><text x="98.7675%" y="239.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,198,005 samples, 0.24%)</title><rect x="98.5175%" y="213" width="0.2435%" height="15" fill="rgb(241,101,14)" fg:x="889216359" fg:w="2198005"/><text x="98.7675%" y="223.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (29,870,247 samples, 3.31%)</title><rect x="95.7578%" y="453" width="3.3094%" height="15" fill="rgb(238,103,29)" fg:x="864307853" fg:w="29870247"/><text x="96.0078%" y="463.50">[li..</text></g><g><title>dlopen (25,254,837 samples, 2.80%)</title><rect x="96.2692%" y="437" width="2.7980%" height="15" fill="rgb(233,195,47)" fg:x="868923263" fg:w="25254837"/><text x="96.5192%" y="447.50">dl..</text></g><g><title>[libc.so.6] (25,254,837 samples, 2.80%)</title><rect x="96.2692%" y="421" width="2.7980%" height="15" fill="rgb(246,218,30)" fg:x="868923263" fg:w="25254837"/><text x="96.5192%" y="431.50">[l..</text></g><g><title>[ld-linux-x86-64.so.2] (25,254,837 samples, 2.80%)</title><rect x="96.2692%" y="405" width="2.7980%" height="15" fill="rgb(219,145,47)" fg:x="868923263" fg:w="25254837"/><text x="96.5192%" y="415.50">[l..</text></g><g><title>_dl_catch_exception (25,254,837 samples, 2.80%)</title><rect x="96.2692%" y="389" width="2.7980%" height="15" fill="rgb(243,12,26)" fg:x="868923263" fg:w="25254837"/><text x="96.5192%" y="399.50">_d..</text></g><g><title>[libc.so.6] (25,254,837 samples, 2.80%)</title><rect x="96.2692%" y="373" width="2.7980%" height="15" fill="rgb(214,87,16)" fg:x="868923263" fg:w="25254837"/><text x="96.5192%" y="383.50">[l..</text></g><g><title>[ld-linux-x86-64.so.2] (25,254,837 samples, 2.80%)</title><rect x="96.2692%" y="357" width="2.7980%" height="15" fill="rgb(208,99,42)" fg:x="868923263" fg:w="25254837"/><text x="96.5192%" y="367.50">[l..</text></g><g><title>_dl_catch_exception (25,254,837 samples, 2.80%)</title><rect x="96.2692%" y="341" width="2.7980%" height="15" fill="rgb(253,99,2)" fg:x="868923263" fg:w="25254837"/><text x="96.5192%" y="351.50">_d..</text></g><g><title>[ld-linux-x86-64.so.2] (25,254,837 samples, 2.80%)</title><rect x="96.2692%" y="325" width="2.7980%" height="15" fill="rgb(220,168,23)" fg:x="868923263" fg:w="25254837"/><text x="96.5192%" y="335.50">[l..</text></g><g><title>_dl_catch_exception (25,254,837 samples, 2.80%)</title><rect x="96.2692%" y="309" width="2.7980%" height="15" fill="rgb(242,38,24)" fg:x="868923263" fg:w="25254837"/><text x="96.5192%" y="319.50">_d..</text></g><g><title>[ld-linux-x86-64.so.2] (25,254,837 samples, 2.80%)</title><rect x="96.2692%" y="293" width="2.7980%" height="15" fill="rgb(225,182,9)" fg:x="868923263" fg:w="25254837"/><text x="96.5192%" y="303.50">[l..</text></g><g><title>[ld-linux-x86-64.so.2] (25,254,837 samples, 2.80%)</title><rect x="96.2692%" y="277" width="2.7980%" height="15" fill="rgb(243,178,37)" fg:x="868923263" fg:w="25254837"/><text x="96.5192%" y="287.50">[l..</text></g><g><title>[libLLVM.so.18.1] (2,763,736 samples, 0.31%)</title><rect x="98.7610%" y="261" width="0.3062%" height="15" fill="rgb(232,139,19)" fg:x="891414364" fg:w="2763736"/><text x="99.0110%" y="271.50"></text></g><g><title>llvm::cl::Option::addArgument (2,763,736 samples, 0.31%)</title><rect x="98.7610%" y="245" width="0.3062%" height="15" fill="rgb(225,201,24)" fg:x="891414364" fg:w="2763736"/><text x="99.0110%" y="255.50"></text></g><g><title>[libLLVM.so.18.1] (2,763,736 samples, 0.31%)</title><rect x="98.7610%" y="229" width="0.3062%" height="15" fill="rgb(221,47,46)" fg:x="891414364" fg:w="2763736"/><text x="99.0110%" y="239.50"></text></g><g><title>[libLLVM.so.18.1] (2,763,736 samples, 0.31%)</title><rect x="98.7610%" y="213" width="0.3062%" height="15" fill="rgb(249,23,13)" fg:x="891414364" fg:w="2763736"/><text x="99.0110%" y="223.50"></text></g><g><title>operator new (2,763,736 samples, 0.31%)</title><rect x="98.7610%" y="197" width="0.3062%" height="15" fill="rgb(219,9,5)" fg:x="891414364" fg:w="2763736"/><text x="99.0110%" y="207.50"></text></g><g><title>operator new (2,763,736 samples, 0.31%)</title><rect x="98.7610%" y="181" width="0.3062%" height="15" fill="rgb(254,171,16)" fg:x="891414364" fg:w="2763736"/><text x="99.0110%" y="191.50"></text></g><g><title>posix_memalign (2,763,736 samples, 0.31%)</title><rect x="98.7610%" y="165" width="0.3062%" height="15" fill="rgb(230,171,20)" fg:x="891414364" fg:w="2763736"/><text x="99.0110%" y="175.50"></text></g><g><title>malloc (2,763,736 samples, 0.31%)</title><rect x="98.7610%" y="149" width="0.3062%" height="15" fill="rgb(210,71,41)" fg:x="891414364" fg:w="2763736"/><text x="99.0110%" y="159.50"></text></g><g><title>[libc.so.6] (2,763,736 samples, 0.31%)</title><rect x="98.7610%" y="133" width="0.3062%" height="15" fill="rgb(206,173,20)" fg:x="891414364" fg:w="2763736"/><text x="99.0110%" y="143.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (29,912,394 samples, 3.31%)</title><rect x="95.7578%" y="469" width="3.3140%" height="15" fill="rgb(233,88,34)" fg:x="864307853" fg:w="29912394"/><text x="96.0078%" y="479.50">[li..</text></g><g><title>[libGLX_mesa.so.0.0.0] (30,427,982 samples, 3.37%)</title><rect x="95.7578%" y="549" width="3.3712%" height="15" fill="rgb(223,209,46)" fg:x="864307853" fg:w="30427982"/><text x="96.0078%" y="559.50">[li..</text></g><g><title>[libGLX_mesa.so.0.0.0] (30,427,982 samples, 3.37%)</title><rect x="95.7578%" y="533" width="3.3712%" height="15" fill="rgb(250,43,18)" fg:x="864307853" fg:w="30427982"/><text x="96.0078%" y="543.50">[li..</text></g><g><title>[libGLX_mesa.so.0.0.0] (30,427,982 samples, 3.37%)</title><rect x="95.7578%" y="517" width="3.3712%" height="15" fill="rgb(208,13,10)" fg:x="864307853" fg:w="30427982"/><text x="96.0078%" y="527.50">[li..</text></g><g><title>[libGLX_mesa.so.0.0.0] (30,427,982 samples, 3.37%)</title><rect x="95.7578%" y="501" width="3.3712%" height="15" fill="rgb(212,200,36)" fg:x="864307853" fg:w="30427982"/><text x="96.0078%" y="511.50">[li..</text></g><g><title>[libGLX_mesa.so.0.0.0] (30,427,982 samples, 3.37%)</title><rect x="95.7578%" y="485" width="3.3712%" height="15" fill="rgb(225,90,30)" fg:x="864307853" fg:w="30427982"/><text x="96.0078%" y="495.50">[li..</text></g><g><title>_XReply (515,588 samples, 0.06%)</title><rect x="99.0719%" y="469" width="0.0571%" height="15" fill="rgb(236,182,39)" fg:x="894220247" fg:w="515588"/><text x="99.3219%" y="479.50"></text></g><g><title>xcb_wait_for_reply64 (515,588 samples, 0.06%)</title><rect x="99.0719%" y="453" width="0.0571%" height="15" fill="rgb(212,144,35)" fg:x="894220247" fg:w="515588"/><text x="99.3219%" y="463.50"></text></g><g><title>[libxcb.so.1.1.0] (515,588 samples, 0.06%)</title><rect x="99.0719%" y="437" width="0.0571%" height="15" fill="rgb(228,63,44)" fg:x="894220247" fg:w="515588"/><text x="99.3219%" y="447.50"></text></g><g><title>[libxcb.so.1.1.0] (515,588 samples, 0.06%)</title><rect x="99.0719%" y="421" width="0.0571%" height="15" fill="rgb(228,109,6)" fg:x="894220247" fg:w="515588"/><text x="99.3219%" y="431.50"></text></g><g><title>[libxcb.so.1.1.0] (515,588 samples, 0.06%)</title><rect x="99.0719%" y="405" width="0.0571%" height="15" fill="rgb(238,117,24)" fg:x="894220247" fg:w="515588"/><text x="99.3219%" y="415.50"></text></g><g><title>[libxcb.so.1.1.0] (515,588 samples, 0.06%)</title><rect x="99.0719%" y="389" width="0.0571%" height="15" fill="rgb(242,26,26)" fg:x="894220247" fg:w="515588"/><text x="99.3219%" y="399.50"></text></g><g><title>__poll (515,588 samples, 0.06%)</title><rect x="99.0719%" y="373" width="0.0571%" height="15" fill="rgb(221,92,48)" fg:x="894220247" fg:w="515588"/><text x="99.3219%" y="383.50"></text></g><g><title>[unknown] (515,588 samples, 0.06%)</title><rect x="99.0719%" y="357" width="0.0571%" height="15" fill="rgb(209,209,32)" fg:x="894220247" fg:w="515588"/><text x="99.3219%" y="367.50"></text></g><g><title>miniquad::native::linux_x11::glx::Glx::init (30,934,375 samples, 3.43%)</title><rect x="95.7578%" y="565" width="3.4273%" height="15" fill="rgb(221,70,22)" fg:x="864307853" fg:w="30934375"/><text x="96.0078%" y="575.50">min..</text></g><g><title>glXQueryExtensionsString (506,393 samples, 0.06%)</title><rect x="99.1290%" y="549" width="0.0561%" height="15" fill="rgb(248,145,5)" fg:x="894735835" fg:w="506393"/><text x="99.3790%" y="559.50"></text></g><g><title>[libGLX.so.0.0.0] (506,393 samples, 0.06%)</title><rect x="99.1290%" y="533" width="0.0561%" height="15" fill="rgb(226,116,26)" fg:x="894735835" fg:w="506393"/><text x="99.3790%" y="543.50"></text></g><g><title>[libGLX.so.0.0.0] (506,393 samples, 0.06%)</title><rect x="99.1290%" y="517" width="0.0561%" height="15" fill="rgb(244,5,17)" fg:x="894735835" fg:w="506393"/><text x="99.3790%" y="527.50"></text></g><g><title>dlopen (506,393 samples, 0.06%)</title><rect x="99.1290%" y="501" width="0.0561%" height="15" fill="rgb(252,159,33)" fg:x="894735835" fg:w="506393"/><text x="99.3790%" y="511.50"></text></g><g><title>[libc.so.6] (506,393 samples, 0.06%)</title><rect x="99.1290%" y="485" width="0.0561%" height="15" fill="rgb(206,71,0)" fg:x="894735835" fg:w="506393"/><text x="99.3790%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (506,393 samples, 0.06%)</title><rect x="99.1290%" y="469" width="0.0561%" height="15" fill="rgb(233,118,54)" fg:x="894735835" fg:w="506393"/><text x="99.3790%" y="479.50"></text></g><g><title>_dl_catch_exception (506,393 samples, 0.06%)</title><rect x="99.1290%" y="453" width="0.0561%" height="15" fill="rgb(234,83,48)" fg:x="894735835" fg:w="506393"/><text x="99.3790%" y="463.50"></text></g><g><title>[libc.so.6] (506,393 samples, 0.06%)</title><rect x="99.1290%" y="437" width="0.0561%" height="15" fill="rgb(228,3,54)" fg:x="894735835" fg:w="506393"/><text x="99.3790%" y="447.50"></text></g><g><title>[ld-linux-x86-64.so.2] (506,393 samples, 0.06%)</title><rect x="99.1290%" y="421" width="0.0561%" height="15" fill="rgb(226,155,13)" fg:x="894735835" fg:w="506393"/><text x="99.3790%" y="431.50"></text></g><g><title>_dl_catch_exception (506,393 samples, 0.06%)</title><rect x="99.1290%" y="405" width="0.0561%" height="15" fill="rgb(241,28,37)" fg:x="894735835" fg:w="506393"/><text x="99.3790%" y="415.50"></text></g><g><title>[ld-linux-x86-64.so.2] (506,393 samples, 0.06%)</title><rect x="99.1290%" y="389" width="0.0561%" height="15" fill="rgb(233,93,10)" fg:x="894735835" fg:w="506393"/><text x="99.3790%" y="399.50"></text></g><g><title>_dl_catch_exception (506,393 samples, 0.06%)</title><rect x="99.1290%" y="373" width="0.0561%" height="15" fill="rgb(225,113,19)" fg:x="894735835" fg:w="506393"/><text x="99.3790%" y="383.50"></text></g><g><title>[ld-linux-x86-64.so.2] (506,393 samples, 0.06%)</title><rect x="99.1290%" y="357" width="0.0561%" height="15" fill="rgb(241,2,18)" fg:x="894735835" fg:w="506393"/><text x="99.3790%" y="367.50"></text></g><g><title>[ld-linux-x86-64.so.2] (506,393 samples, 0.06%)</title><rect x="99.1290%" y="341" width="0.0561%" height="15" fill="rgb(228,207,21)" fg:x="894735835" fg:w="506393"/><text x="99.3790%" y="351.50"></text></g><g><title>[ld-linux-x86-64.so.2] (506,393 samples, 0.06%)</title><rect x="99.1290%" y="325" width="0.0561%" height="15" fill="rgb(213,211,35)" fg:x="894735835" fg:w="506393"/><text x="99.3790%" y="335.50"></text></g><g><title>[ld-linux-x86-64.so.2] (506,393 samples, 0.06%)</title><rect x="99.1290%" y="309" width="0.0561%" height="15" fill="rgb(209,83,10)" fg:x="894735835" fg:w="506393"/><text x="99.3790%" y="319.50"></text></g><g><title>[libX11.so.6.4.0] (475,403 samples, 0.05%)</title><rect x="99.1905%" y="469" width="0.0527%" height="15" fill="rgb(209,164,1)" fg:x="895290867" fg:w="475403"/><text x="99.4405%" y="479.50"></text></g><g><title>[libX11.so.6.4.0] (475,403 samples, 0.05%)</title><rect x="99.1905%" y="453" width="0.0527%" height="15" fill="rgb(213,184,43)" fg:x="895290867" fg:w="475403"/><text x="99.4405%" y="463.50"></text></g><g><title>[libxcb.so.1.1.0] (475,403 samples, 0.05%)</title><rect x="99.1905%" y="437" width="0.0527%" height="15" fill="rgb(231,61,34)" fg:x="895290867" fg:w="475403"/><text x="99.4405%" y="447.50"></text></g><g><title>[libc.so.6] (475,403 samples, 0.05%)</title><rect x="99.1905%" y="421" width="0.0527%" height="15" fill="rgb(235,75,3)" fg:x="895290867" fg:w="475403"/><text x="99.4405%" y="431.50"></text></g><g><title>miniquad::native::linux_x11::glx_main_loop (852,964,015 samples, 94.50%)</title><rect x="4.7422%" y="581" width="94.5010%" height="15" fill="rgb(220,106,47)" fg:x="42802560" fg:w="852964015"/><text x="4.9922%" y="591.50">miniquad::native::linux_x11::glx_main_loop</text></g><g><title>miniquad::native::linux_x11::libx11_ex::&lt;impl miniquad::native::linux_x11::libx11::LibX11&gt;::create_window (524,347 samples, 0.06%)</title><rect x="99.1851%" y="565" width="0.0581%" height="15" fill="rgb(210,196,33)" fg:x="895242228" fg:w="524347"/><text x="99.4351%" y="575.50"></text></g><g><title>miniquad::native::linux_x11::libx11_ex::&lt;impl miniquad::native::linux_x11::libx11::LibX11&gt;::update_window_title (475,708 samples, 0.05%)</title><rect x="99.1905%" y="549" width="0.0527%" height="15" fill="rgb(229,154,42)" fg:x="895290867" fg:w="475708"/><text x="99.4405%" y="559.50"></text></g><g><title>Xutf8SetWMProperties (475,708 samples, 0.05%)</title><rect x="99.1905%" y="533" width="0.0527%" height="15" fill="rgb(228,114,26)" fg:x="895290867" fg:w="475708"/><text x="99.4405%" y="543.50"></text></g><g><title>XSetWMProperties (475,708 samples, 0.05%)</title><rect x="99.1905%" y="517" width="0.0527%" height="15" fill="rgb(208,144,1)" fg:x="895290867" fg:w="475708"/><text x="99.4405%" y="527.50"></text></g><g><title>XInternAtom (475,708 samples, 0.05%)</title><rect x="99.1905%" y="501" width="0.0527%" height="15" fill="rgb(239,112,37)" fg:x="895290867" fg:w="475708"/><text x="99.4405%" y="511.50"></text></g><g><title>_XReply (475,708 samples, 0.05%)</title><rect x="99.1905%" y="485" width="0.0527%" height="15" fill="rgb(210,96,50)" fg:x="895290867" fg:w="475708"/><text x="99.4405%" y="495.50"></text></g><g><title>miniquad::native::linux_x11::libx11::LibX11::try_load (405,217 samples, 0.04%)</title><rect x="99.2432%" y="581" width="0.0449%" height="15" fill="rgb(222,178,2)" fg:x="895766575" fg:w="405217"/><text x="99.4932%" y="591.50"></text></g><g><title>miniquad::native::module::linux::Module::load (405,217 samples, 0.04%)</title><rect x="99.2432%" y="565" width="0.0449%" height="15" fill="rgb(226,74,18)" fg:x="895766575" fg:w="405217"/><text x="99.4932%" y="575.50"></text></g><g><title>dlopen (405,217 samples, 0.04%)</title><rect x="99.2432%" y="549" width="0.0449%" height="15" fill="rgb(225,67,54)" fg:x="895766575" fg:w="405217"/><text x="99.4932%" y="559.50"></text></g><g><title>[libc.so.6] (405,217 samples, 0.04%)</title><rect x="99.2432%" y="533" width="0.0449%" height="15" fill="rgb(251,92,32)" fg:x="895766575" fg:w="405217"/><text x="99.4932%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (405,217 samples, 0.04%)</title><rect x="99.2432%" y="517" width="0.0449%" height="15" fill="rgb(228,149,22)" fg:x="895766575" fg:w="405217"/><text x="99.4932%" y="527.50"></text></g><g><title>_dl_catch_exception (405,217 samples, 0.04%)</title><rect x="99.2432%" y="501" width="0.0449%" height="15" fill="rgb(243,54,13)" fg:x="895766575" fg:w="405217"/><text x="99.4932%" y="511.50"></text></g><g><title>[libc.so.6] (405,217 samples, 0.04%)</title><rect x="99.2432%" y="485" width="0.0449%" height="15" fill="rgb(243,180,28)" fg:x="895766575" fg:w="405217"/><text x="99.4932%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (405,217 samples, 0.04%)</title><rect x="99.2432%" y="469" width="0.0449%" height="15" fill="rgb(208,167,24)" fg:x="895766575" fg:w="405217"/><text x="99.4932%" y="479.50"></text></g><g><title>_dl_catch_exception (405,217 samples, 0.04%)</title><rect x="99.2432%" y="453" width="0.0449%" height="15" fill="rgb(245,73,45)" fg:x="895766575" fg:w="405217"/><text x="99.4932%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (405,217 samples, 0.04%)</title><rect x="99.2432%" y="437" width="0.0449%" height="15" fill="rgb(237,203,48)" fg:x="895766575" fg:w="405217"/><text x="99.4932%" y="447.50"></text></g><g><title>_dl_catch_exception (405,217 samples, 0.04%)</title><rect x="99.2432%" y="421" width="0.0449%" height="15" fill="rgb(211,197,16)" fg:x="895766575" fg:w="405217"/><text x="99.4932%" y="431.50"></text></g><g><title>[ld-linux-x86-64.so.2] (405,217 samples, 0.04%)</title><rect x="99.2432%" y="405" width="0.0449%" height="15" fill="rgb(243,99,51)" fg:x="895766575" fg:w="405217"/><text x="99.4932%" y="415.50"></text></g><g><title>[ld-linux-x86-64.so.2] (405,217 samples, 0.04%)</title><rect x="99.2432%" y="389" width="0.0449%" height="15" fill="rgb(215,123,29)" fg:x="895766575" fg:w="405217"/><text x="99.4932%" y="399.50"></text></g><g><title>[ld-linux-x86-64.so.2] (405,217 samples, 0.04%)</title><rect x="99.2432%" y="373" width="0.0449%" height="15" fill="rgb(239,186,37)" fg:x="895766575" fg:w="405217"/><text x="99.4932%" y="383.50"></text></g><g><title>[ld-linux-x86-64.so.2] (405,217 samples, 0.04%)</title><rect x="99.2432%" y="357" width="0.0449%" height="15" fill="rgb(252,136,39)" fg:x="895766575" fg:w="405217"/><text x="99.4932%" y="367.50"></text></g><g><title>XCreateBitmapFromData (381,942 samples, 0.04%)</title><rect x="99.2881%" y="565" width="0.0423%" height="15" fill="rgb(223,213,32)" fg:x="896171792" fg:w="381942"/><text x="99.5381%" y="575.50"></text></g><g><title>XCreatePixmap (381,942 samples, 0.04%)</title><rect x="99.2881%" y="549" width="0.0423%" height="15" fill="rgb(233,115,5)" fg:x="896171792" fg:w="381942"/><text x="99.5381%" y="559.50"></text></g><g><title>_XNoticeCreateBitmap (381,942 samples, 0.04%)</title><rect x="99.2881%" y="533" width="0.0423%" height="15" fill="rgb(207,226,44)" fg:x="896171792" fg:w="381942"/><text x="99.5381%" y="543.50"></text></g><g><title>dlopen (381,942 samples, 0.04%)</title><rect x="99.2881%" y="517" width="0.0423%" height="15" fill="rgb(208,126,0)" fg:x="896171792" fg:w="381942"/><text x="99.5381%" y="527.50"></text></g><g><title>[libc.so.6] (381,942 samples, 0.04%)</title><rect x="99.2881%" y="501" width="0.0423%" height="15" fill="rgb(244,66,21)" fg:x="896171792" fg:w="381942"/><text x="99.5381%" y="511.50"></text></g><g><title>[ld-linux-x86-64.so.2] (381,942 samples, 0.04%)</title><rect x="99.2881%" y="485" width="0.0423%" height="15" fill="rgb(222,97,12)" fg:x="896171792" fg:w="381942"/><text x="99.5381%" y="495.50"></text></g><g><title>_dl_catch_exception (381,942 samples, 0.04%)</title><rect x="99.2881%" y="469" width="0.0423%" height="15" fill="rgb(219,213,19)" fg:x="896171792" fg:w="381942"/><text x="99.5381%" y="479.50"></text></g><g><title>[libc.so.6] (381,942 samples, 0.04%)</title><rect x="99.2881%" y="453" width="0.0423%" height="15" fill="rgb(252,169,30)" fg:x="896171792" fg:w="381942"/><text x="99.5381%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (381,942 samples, 0.04%)</title><rect x="99.2881%" y="437" width="0.0423%" height="15" fill="rgb(206,32,51)" fg:x="896171792" fg:w="381942"/><text x="99.5381%" y="447.50"></text></g><g><title>_dl_catch_exception (381,942 samples, 0.04%)</title><rect x="99.2881%" y="421" width="0.0423%" height="15" fill="rgb(250,172,42)" fg:x="896171792" fg:w="381942"/><text x="99.5381%" y="431.50"></text></g><g><title>[ld-linux-x86-64.so.2] (381,942 samples, 0.04%)</title><rect x="99.2881%" y="405" width="0.0423%" height="15" fill="rgb(209,34,43)" fg:x="896171792" fg:w="381942"/><text x="99.5381%" y="415.50"></text></g><g><title>_dl_catch_exception (381,942 samples, 0.04%)</title><rect x="99.2881%" y="389" width="0.0423%" height="15" fill="rgb(223,11,35)" fg:x="896171792" fg:w="381942"/><text x="99.5381%" y="399.50"></text></g><g><title>[ld-linux-x86-64.so.2] (381,942 samples, 0.04%)</title><rect x="99.2881%" y="373" width="0.0423%" height="15" fill="rgb(251,219,26)" fg:x="896171792" fg:w="381942"/><text x="99.5381%" y="383.50"></text></g><g><title>[ld-linux-x86-64.so.2] (381,942 samples, 0.04%)</title><rect x="99.2881%" y="357" width="0.0423%" height="15" fill="rgb(231,119,3)" fg:x="896171792" fg:w="381942"/><text x="99.5381%" y="367.50"></text></g><g><title>[ld-linux-x86-64.so.2] (381,942 samples, 0.04%)</title><rect x="99.2881%" y="341" width="0.0423%" height="15" fill="rgb(216,97,11)" fg:x="896171792" fg:w="381942"/><text x="99.5381%" y="351.50"></text></g><g><title>miniquad::native::linux_x11::x_cursor::create_empty_cursor (765,037 samples, 0.08%)</title><rect x="99.2881%" y="581" width="0.0848%" height="15" fill="rgb(223,59,9)" fg:x="896171792" fg:w="765037"/><text x="99.5381%" y="591.50"></text></g><g><title>XCreatePixmapCursor (383,095 samples, 0.04%)</title><rect x="99.3304%" y="565" width="0.0424%" height="15" fill="rgb(233,93,31)" fg:x="896553734" fg:w="383095"/><text x="99.5804%" y="575.50"></text></g><g><title>XcursorTryShapeBitmapCursor (383,095 samples, 0.04%)</title><rect x="99.3304%" y="549" width="0.0424%" height="15" fill="rgb(239,81,33)" fg:x="896553734" fg:w="383095"/><text x="99.5804%" y="559.50"></text></g><g><title>XcursorLibraryLoadCursor (383,095 samples, 0.04%)</title><rect x="99.3304%" y="533" width="0.0424%" height="15" fill="rgb(213,120,34)" fg:x="896553734" fg:w="383095"/><text x="99.5804%" y="543.50"></text></g><g><title>XcursorLibraryLoadImages (383,095 samples, 0.04%)</title><rect x="99.3304%" y="517" width="0.0424%" height="15" fill="rgb(243,49,53)" fg:x="896553734" fg:w="383095"/><text x="99.5804%" y="527.50"></text></g><g><title>[libXcursor.so.1.0.2] (383,095 samples, 0.04%)</title><rect x="99.3304%" y="501" width="0.0424%" height="15" fill="rgb(247,216,33)" fg:x="896553734" fg:w="383095"/><text x="99.5804%" y="511.50"></text></g><g><title>[libXcursor.so.1.0.2] (383,095 samples, 0.04%)</title><rect x="99.3304%" y="485" width="0.0424%" height="15" fill="rgb(226,26,14)" fg:x="896553734" fg:w="383095"/><text x="99.5804%" y="495.50"></text></g><g><title>_IO_fgets (383,095 samples, 0.04%)</title><rect x="99.3304%" y="469" width="0.0424%" height="15" fill="rgb(215,49,53)" fg:x="896553734" fg:w="383095"/><text x="99.5804%" y="479.50"></text></g><g><title>_IO_getline_info (383,095 samples, 0.04%)</title><rect x="99.3304%" y="453" width="0.0424%" height="15" fill="rgb(245,162,40)" fg:x="896553734" fg:w="383095"/><text x="99.5804%" y="463.50"></text></g><g><title>eportal_rust::main (854,516,579 samples, 94.67%)</title><rect x="4.7422%" y="645" width="94.6731%" height="15" fill="rgb(229,68,17)" fg:x="42802560" fg:w="854516579"/><text x="4.9922%" y="655.50">eportal_rust::main</text></g><g><title>macroquad::Window::from_config (854,516,579 samples, 94.67%)</title><rect x="4.7422%" y="629" width="94.6731%" height="15" fill="rgb(213,182,10)" fg:x="42802560" fg:w="854516579"/><text x="4.9922%" y="639.50">macroquad::Window::from_config</text></g><g><title>miniquad::start (854,516,579 samples, 94.67%)</title><rect x="4.7422%" y="613" width="94.6731%" height="15" fill="rgb(245,125,30)" fg:x="42802560" fg:w="854516579"/><text x="4.9922%" y="623.50">miniquad::start</text></g><g><title>miniquad::native::linux_x11::run (854,516,579 samples, 94.67%)</title><rect x="4.7422%" y="597" width="94.6731%" height="15" fill="rgb(232,202,2)" fg:x="42802560" fg:w="854516579"/><text x="4.9922%" y="607.50">miniquad::native::linux_x11::run</text></g><g><title>miniquad::native::linux_x11::xi_input::LibXi::try_load (382,310 samples, 0.04%)</title><rect x="99.3729%" y="581" width="0.0424%" height="15" fill="rgb(237,140,51)" fg:x="896936829" fg:w="382310"/><text x="99.6229%" y="591.50"></text></g><g><title>miniquad::native::module::linux::Module::load (382,310 samples, 0.04%)</title><rect x="99.3729%" y="565" width="0.0424%" height="15" fill="rgb(236,157,25)" fg:x="896936829" fg:w="382310"/><text x="99.6229%" y="575.50"></text></g><g><title>dlopen (382,310 samples, 0.04%)</title><rect x="99.3729%" y="549" width="0.0424%" height="15" fill="rgb(219,209,0)" fg:x="896936829" fg:w="382310"/><text x="99.6229%" y="559.50"></text></g><g><title>[libc.so.6] (382,310 samples, 0.04%)</title><rect x="99.3729%" y="533" width="0.0424%" height="15" fill="rgb(240,116,54)" fg:x="896936829" fg:w="382310"/><text x="99.6229%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (382,310 samples, 0.04%)</title><rect x="99.3729%" y="517" width="0.0424%" height="15" fill="rgb(216,10,36)" fg:x="896936829" fg:w="382310"/><text x="99.6229%" y="527.50"></text></g><g><title>_dl_catch_exception (382,310 samples, 0.04%)</title><rect x="99.3729%" y="501" width="0.0424%" height="15" fill="rgb(222,72,44)" fg:x="896936829" fg:w="382310"/><text x="99.6229%" y="511.50"></text></g><g><title>[libc.so.6] (382,310 samples, 0.04%)</title><rect x="99.3729%" y="485" width="0.0424%" height="15" fill="rgb(232,159,9)" fg:x="896936829" fg:w="382310"/><text x="99.6229%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (382,310 samples, 0.04%)</title><rect x="99.3729%" y="469" width="0.0424%" height="15" fill="rgb(210,39,32)" fg:x="896936829" fg:w="382310"/><text x="99.6229%" y="479.50"></text></g><g><title>_dl_catch_exception (382,310 samples, 0.04%)</title><rect x="99.3729%" y="453" width="0.0424%" height="15" fill="rgb(216,194,45)" fg:x="896936829" fg:w="382310"/><text x="99.6229%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (382,310 samples, 0.04%)</title><rect x="99.3729%" y="437" width="0.0424%" height="15" fill="rgb(218,18,35)" fg:x="896936829" fg:w="382310"/><text x="99.6229%" y="447.50"></text></g><g><title>_dl_catch_exception (382,310 samples, 0.04%)</title><rect x="99.3729%" y="421" width="0.0424%" height="15" fill="rgb(207,83,51)" fg:x="896936829" fg:w="382310"/><text x="99.6229%" y="431.50"></text></g><g><title>[ld-linux-x86-64.so.2] (382,310 samples, 0.04%)</title><rect x="99.3729%" y="405" width="0.0424%" height="15" fill="rgb(225,63,43)" fg:x="896936829" fg:w="382310"/><text x="99.6229%" y="415.50"></text></g><g><title>[ld-linux-x86-64.so.2] (382,310 samples, 0.04%)</title><rect x="99.3729%" y="389" width="0.0424%" height="15" fill="rgb(207,57,36)" fg:x="896936829" fg:w="382310"/><text x="99.6229%" y="399.50"></text></g><g><title>[ld-linux-x86-64.so.2] (382,310 samples, 0.04%)</title><rect x="99.3729%" y="373" width="0.0424%" height="15" fill="rgb(216,99,33)" fg:x="896936829" fg:w="382310"/><text x="99.6229%" y="383.50"></text></g><g><title>macroquad::Window::from_config::_{{closure}} (4,909,673 samples, 0.54%)</title><rect x="99.4152%" y="629" width="0.5439%" height="15" fill="rgb(225,42,16)" fg:x="897319139" fg:w="4909673"/><text x="99.6652%" y="639.50"></text></g><g><title>macroquad::Context::new (4,909,673 samples, 0.54%)</title><rect x="99.4152%" y="613" width="0.5439%" height="15" fill="rgb(220,201,45)" fg:x="897319139" fg:w="4909673"/><text x="99.6652%" y="623.50"></text></g><g><title>macroquad::quad_gl::QuadGl::new (4,909,673 samples, 0.54%)</title><rect x="99.4152%" y="597" width="0.5439%" height="15" fill="rgb(225,33,4)" fg:x="897319139" fg:w="4909673"/><text x="99.6652%" y="607.50"></text></g><g><title>macroquad::quad_gl::PipelinesStorage::new (4,909,673 samples, 0.54%)</title><rect x="99.4152%" y="581" width="0.5439%" height="15" fill="rgb(224,33,50)" fg:x="897319139" fg:w="4909673"/><text x="99.6652%" y="591.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::new_shader (4,909,673 samples, 0.54%)</title><rect x="99.4152%" y="565" width="0.5439%" height="15" fill="rgb(246,198,51)" fg:x="897319139" fg:w="4909673"/><text x="99.6652%" y="575.50"></text></g><g><title>miniquad::graphics::gl::load_shader_internal (4,909,673 samples, 0.54%)</title><rect x="99.4152%" y="549" width="0.5439%" height="15" fill="rgb(205,22,4)" fg:x="897319139" fg:w="4909673"/><text x="99.6652%" y="559.50"></text></g><g><title>miniquad::graphics::gl::load_shader (4,909,673 samples, 0.54%)</title><rect x="99.4152%" y="533" width="0.5439%" height="15" fill="rgb(206,3,8)" fg:x="897319139" fg:w="4909673"/><text x="99.6652%" y="543.50"></text></g><g><title>miniquad::native::gl::glCompileShader (4,909,673 samples, 0.54%)</title><rect x="99.4152%" y="517" width="0.5439%" height="15" fill="rgb(251,23,15)" fg:x="897319139" fg:w="4909673"/><text x="99.6652%" y="527.50"></text></g><g><title>[iris_dri.so] (4,909,673 samples, 0.54%)</title><rect x="99.4152%" y="501" width="0.5439%" height="15" fill="rgb(252,88,28)" fg:x="897319139" fg:w="4909673"/><text x="99.6652%" y="511.50"></text></g><g><title>[iris_dri.so] (4,909,673 samples, 0.54%)</title><rect x="99.4152%" y="485" width="0.5439%" height="15" fill="rgb(212,127,14)" fg:x="897319139" fg:w="4909673"/><text x="99.6652%" y="495.50"></text></g><g><title>[iris_dri.so] (4,909,673 samples, 0.54%)</title><rect x="99.4152%" y="469" width="0.5439%" height="15" fill="rgb(247,145,37)" fg:x="897319139" fg:w="4909673"/><text x="99.6652%" y="479.50"></text></g><g><title>[iris_dri.so] (4,909,673 samples, 0.54%)</title><rect x="99.4152%" y="453" width="0.5439%" height="15" fill="rgb(209,117,53)" fg:x="897319139" fg:w="4909673"/><text x="99.6652%" y="463.50"></text></g><g><title>[iris_dri.so] (4,909,673 samples, 0.54%)</title><rect x="99.4152%" y="437" width="0.5439%" height="15" fill="rgb(212,90,42)" fg:x="897319139" fg:w="4909673"/><text x="99.6652%" y="447.50"></text></g><g><title>[iris_dri.so] (2,579,153 samples, 0.29%)</title><rect x="99.6734%" y="421" width="0.2857%" height="15" fill="rgb(218,164,37)" fg:x="899649659" fg:w="2579153"/><text x="99.9234%" y="431.50"></text></g><g><title>eportal-rust (886,693,006 samples, 98.24%)</title><rect x="1.7493%" y="661" width="98.2379%" height="15" fill="rgb(246,65,34)" fg:x="15789060" fg:w="886693006"/><text x="1.9993%" y="671.50">eportal-rust</text></g><g><title>miniquad::native::linux_x11::glx_main_loop (5,162,927 samples, 0.57%)</title><rect x="99.4152%" y="645" width="0.5720%" height="15" fill="rgb(231,100,33)" fg:x="897319139" fg:w="5162927"/><text x="99.6652%" y="655.50"></text></g><g><title>miniquad::native::linux_x11::glx::Glx::init (253,254 samples, 0.03%)</title><rect x="99.9592%" y="629" width="0.0281%" height="15" fill="rgb(228,126,14)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="639.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="613" width="0.0281%" height="15" fill="rgb(215,173,21)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="623.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="597" width="0.0281%" height="15" fill="rgb(210,6,40)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="607.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="581" width="0.0281%" height="15" fill="rgb(212,48,18)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="591.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="565" width="0.0281%" height="15" fill="rgb(230,214,11)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="575.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="549" width="0.0281%" height="15" fill="rgb(254,105,39)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="559.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="533" width="0.0281%" height="15" fill="rgb(245,158,5)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="543.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="517" width="0.0281%" height="15" fill="rgb(249,208,11)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="527.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="501" width="0.0281%" height="15" fill="rgb(210,39,28)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="511.50"></text></g><g><title>XML_ParseBuffer (253,254 samples, 0.03%)</title><rect x="99.9592%" y="485" width="0.0281%" height="15" fill="rgb(211,56,53)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="495.50"></text></g><g><title>[libexpat.so.1.9.2] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="469" width="0.0281%" height="15" fill="rgb(226,201,30)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="479.50"></text></g><g><title>[libexpat.so.1.9.2] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="453" width="0.0281%" height="15" fill="rgb(239,101,34)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="463.50"></text></g><g><title>[libexpat.so.1.9.2] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="437" width="0.0281%" height="15" fill="rgb(226,209,5)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="447.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="421" width="0.0281%" height="15" fill="rgb(250,105,47)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="431.50"></text></g><g><title>regcomp (253,254 samples, 0.03%)</title><rect x="99.9592%" y="405" width="0.0281%" height="15" fill="rgb(230,72,3)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="415.50"></text></g><g><title>[libc.so.6] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="389" width="0.0281%" height="15" fill="rgb(232,218,39)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="399.50"></text></g><g><title>[libc.so.6] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="373" width="0.0281%" height="15" fill="rgb(248,166,6)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="383.50"></text></g><g><title>[libc.so.6] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="357" width="0.0281%" height="15" fill="rgb(247,89,20)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="367.50"></text></g><g><title>[libc.so.6] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="341" width="0.0281%" height="15" fill="rgb(248,130,54)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="351.50"></text></g><g><title>[libc.so.6] (253,254 samples, 0.03%)</title><rect x="99.9592%" y="325" width="0.0281%" height="15" fill="rgb(234,196,4)" fg:x="902228812" fg:w="253254"/><text x="100.2092%" y="335.50"></text></g><g><title>all (902,597,444 samples, 100%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(250,143,31)" fg:x="0" fg:w="902597444"/><text x="0.2500%" y="687.50"></text></g><g><title>eportal:disk$0 (115,378 samples, 0.01%)</title><rect x="99.9872%" y="661" width="0.0128%" height="15" fill="rgb(211,110,34)" fg:x="902482066" fg:w="115378"/><text x="100.2372%" y="671.50"></text></g><g><title>[libc.so.6] (115,378 samples, 0.01%)</title><rect x="99.9872%" y="645" width="0.0128%" height="15" fill="rgb(215,124,48)" fg:x="902482066" fg:w="115378"/><text x="100.2372%" y="655.50"></text></g><g><title>[libc.so.6] (115,378 samples, 0.01%)</title><rect x="99.9872%" y="629" width="0.0128%" height="15" fill="rgb(216,46,13)" fg:x="902482066" fg:w="115378"/><text x="100.2372%" y="639.50"></text></g><g><title>[iris_dri.so] (115,378 samples, 0.01%)</title><rect x="99.9872%" y="613" width="0.0128%" height="15" fill="rgb(205,184,25)" fg:x="902482066" fg:w="115378"/><text x="100.2372%" y="623.50"></text></g><g><title>[iris_dri.so] (115,378 samples, 0.01%)</title><rect x="99.9872%" y="597" width="0.0128%" height="15" fill="rgb(228,1,10)" fg:x="902482066" fg:w="115378"/><text x="100.2372%" y="607.50"></text></g></svg></svg>